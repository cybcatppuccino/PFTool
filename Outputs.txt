
Traceback (most recent call last):
  File "<pyshell>", line 1, in <module>
  File "C:\Users\chenyb\AppData\Local\Programs\Thonny\lib\site-packages\sympy\polys\polytools.py", line 6773, in groebner
    return GroebnerBasis(F, *gens, **args)
  File "C:\Users\chenyb\AppData\Local\Programs\Thonny\lib\site-packages\sympy\polys\polytools.py", line 6812, in __new__
    G = _groebner(polys, ring, method=opt.method)
  File "C:\Users\chenyb\AppData\Local\Programs\Thonny\lib\site-packages\sympy\polys\groebnertools.py", line 45, in groebner
    G = _groebner(seq, ring)
  File "C:\Users\chenyb\AppData\Local\Programs\Thonny\lib\site-packages\sympy\polys\groebnertools.py", line 696, in _f5b
    H = red_groebner(H, ring)
  File "C:\Users\chenyb\AppData\Local\Programs\Thonny\lib\site-packages\sympy\polys\groebnertools.py", line 726, in red_groebner
    if not any(monomial_divides(f.LM, f0.LM) for f in F + H):
  File "C:\Users\chenyb\AppData\Local\Programs\Thonny\lib\site-packages\sympy\polys\groebnertools.py", line 726, in <genexpr>
    if not any(monomial_divides(f.LM, f0.LM) for f in F + H):
  File "C:\Users\chenyb\AppData\Local\Programs\Thonny\lib\site-packages\sympy\polys\rings.py", line 1729, in LM
    expv = self.leading_expv()
  File "C:\Users\chenyb\AppData\Local\Programs\Thonny\lib\site-packages\sympy\polys\rings.py", line 1675, in leading_expv
    return self.ring.leading_expv(self)
  File "C:\Users\chenyb\AppData\Local\Programs\Thonny\lib\site-packages\sympy\polys\rings.py", line 250, in <lambda>
    obj.leading_expv = lambda f: max(f, key=order)
  File "C:\Users\chenyb\AppData\Local\Programs\Thonny\lib\site-packages\sympy\polys\orderings.py", line 61, in __call__
    return (sum(monomial), tuple(reversed([-m for m in monomial])))
  File "C:\Users\chenyb\AppData\Local\Programs\Thonny\lib\site-packages\sympy\polys\orderings.py", line 61, in <listcomp>
    return (sum(monomial), tuple(reversed([-m for m in monomial])))
KeyboardInterrupt: Execution interrupted
>>> gb = sympy.groebner(jc, [x1,x2,x3,x4,x5, y1,y2,y3,y4,y5], domain='QQ(z)', order='grevlex')
>>> gb = sympy.groebner(jc, [x1,x2,x3,x4,x5, y1,y2,y3,y4,y5], domain='QQ(z)', order='grlex')
>>> gb
GroebnerBasis([x2*x5**11*y2*z**5/(5*z**5 + 5) + x3*x5**11*y3*z**5/(5*z**5 + 5) + x4*x5**11*y4*z**5/(5*z**5 + 5) - x2**4*x3**4*x4**4*y1*z**4/(5*z**5 + 5) + x5**16 + x2*x3*x5**6*y2*y3*z**5/(25*z**5 + 25) + x2*x4*x5**6*y2*y4*z**5/(25*z**5 + 25) - 2*x2*x5**7*y2*y5*z**5/(25*z**5 + 25) + x3*x4*x5**6*y3*y4*z**5/(25*z**5 + 25) - 2*x3*x5**7*y3*y5*z**5/(25*z**5 + 25) - 2*x4*x5**7*y4*y5*z**5/(25*z**5 + 25) + x5**12*y5*(-3*z**5 - 4)/(5*z**5 + 5) + x2*x3*x4*x5*y2*y3*y4*z**5/(125*z**5 + 125) - x2*x3*x5**2*y2*y3*y5*z**5/(125*z**5 + 125) - x2*x4*x5**2*y2*y4*y5*z**5/(125*z**5 + 125) + x2*x5**3*y2*y5**2*z**5/(125*z**5 + 125) - x3*x4*x5**2*y3*y4*y5*z**5/(125*z**5 + 125) + x3*x5**3*y3*y5**2*z**5/(125*z**5 + 125) + x4*x5**3*y4*y5**2*z**5/(125*z**5 + 125) + x5**8*y5**2*(3*z**5 + 6)/(25*z**5 + 25) + x5**4*y5**3*(-z**5 - 4)/(125*z**5 + 125) + y5**4/(625*z**5 + 625), x2**2*x3*x5**6*y3*z**5/(5*z**5 + 5) + x2**2*x4*x5**6*y4*z**5/(5*z**5 + 5) + x2**2*x5**11 - x2*x3**4*x4**4*y1*z**4/(5*z**5 + 5) + x1**3*x3**3*x4**3*y5*z**3/(5*z**5 + 5) + x2**2*x3*x4*x5*y3*y4*z**5/(25*z**5 + 25) - x2**2*x3*x5**2*y3*y5*z**5/(25*z**5 + 25) - x2**2*x4*x5**2*y4*y5*z**5/(25*z**5 + 25) - 2*x2**2*x5**7*y5/5 - x2**3*x5**6*y2/(5*z**5 + 5) + x2**2*x5**3*y5**2/25 + x2**4*x5*y2**2/(25*z**5 + 25) + x2**3*x5**2*y2*y5/(25*z**5 + 25) - x5*y2**3/(125*z**5 + 125), x2*x3*x5**7*y3*z**5/(5*z**5 + 5) + x2*x4*x5**7*y4*z**5/(5*z**5 + 5) + x2*x5**12 - x3**4*x4**4*x5*y1*z**4/(5*z**5 + 5) + x1**3*x3**3*x4**3*y2*z**3/(5*z**5 + 5) + x2*x3*x4*x5**2*y3*y4*z**5/(25*z**5 + 25) - x2*x3*x5**3*y3*y5*z**5/(25*z**5 + 25) - x2*x4*x5**3*y4*y5*z**5/(25*z**5 + 25) + x2*x5**8*y5*(-2*z**5 - 3)/(5*z**5 + 5) + x2*x5**4*y5**2*(z**5 + 3)/(25*z**5 + 25) - x2*y5**3/(125*z**5 + 125), x2*x3**2*x5**6*y2*z**5/(5*z**5 + 5) + x3**2*x4*x5**6*y4*z**5/(5*z**5 + 5) - x2**4*x3*x4**4*y1*z**4/(5*z**5 + 5) + x3**2*x5**11 + x1**3*x2**3*x4**3*y5*z**3/(5*z**5 + 5) + x2*x3**2*x4*x5*y2*y4*z**5/(25*z**5 + 25) - x2*x3**2*x5**2*y2*y5*z**5/(25*z**5 + 25) - x3**2*x4*x5**2*y4*y5*z**5/(25*z**5 + 25) - 2*x3**2*x5**7*y5/5 - x3**3*x5**6*y3/(5*z**5 + 5) + x3**2*x5**3*y5**2/25 + x3**4*x5*y3**2/(25*z**5 + 25) + x3**3*x5**2*y3*y5/(25*z**5 + 25) - x5*y3**3/(125*z**5 + 125), x2*x3*x5**7*y2*z**5/(5*z**5 + 5) + x3*x4*x5**7*y4*z**5/(5*z**5 + 5) - x2**4*x4**4*x5*y1*z**4/(5*z**5 + 5) + x3*x5**12 + x1**3*x2**3*x4**3*y3*z**3/(5*z**5 + 5) + x2*x3*x4*x5**2*y2*y4*z**5/(25*z**5 + 25) - x2*x3*x5**3*y2*y5*z**5/(25*z**5 + 25) - x3*x4*x5**3*y4*y5*z**5/(25*z**5 + 25) + x3*x5**8*y5*(-2*z**5 - 3)/(5*z**5 + 5) + x3*x5**4*y5**2*(z**5 + 3)/(25*z**5 + 25) - x3*y5**3/(125*z**5 + 125), x2*x4**2*x5**6*y2*z**5/(5*z**5 + 5) + x3*x4**2*x5**6*y3*z**5/(5*z**5 + 5) - x2**4*x3**4*x4*y1*z**4/(5*z**5 + 5) + x4**2*x5**11 + x1**3*x2**3*x3**3*y5*z**3/(5*z**5 + 5) + x2*x3*x4**2*x5*y2*y3*z**5/(25*z**5 + 25) - x2*x4**2*x5**2*y2*y5*z**5/(25*z**5 + 25) - x3*x4**2*x5**2*y3*y5*z**5/(25*z**5 + 25) - 2*x4**2*x5**7*y5/5 - x4**3*x5**6*y4/(5*z**5 + 5) + x4**2*x5**3*y5**2/25 + x4**4*x5*y4**2/(25*z**5 + 25) + x4**3*x5**2*y4*y5/(25*z**5 + 25) - x5*y4**3/(125*z**5 + 125), x2*x4*x5**7*y2*z**5/(5*z**5 + 5) + x3*x4*x5**7*y3*z**5/(5*z**5 + 5) - x2**4*x3**4*x5*y1*z**4/(5*z**5 + 5) + x4*x5**12 + x1**3*x2**3*x3**3*y4*z**3/(5*z**5 + 5) + x2*x3*x4*x5**2*y2*y3*z**5/(25*z**5 + 25) - x2*x4*x5**3*y2*y5*z**5/(25*z**5 + 25) - x3*x4*x5**3*y3*y5*z**5/(25*z**5 + 25) + x4*x5**8*y5*(-2*z**5 - 3)/(5*z**5 + 5) + x4*x5**4*y5**2*(z**5 + 3)/(25*z**5 + 25) - x4*y5**3/(125*z**5 + 125), x1*x5**11 + x2**4*x3**4*x4**4/z - 2*x1*x5**7*y5/5 - x2**4*x3**4*y4/(5*z) - x2**4*x4**4*y3/(5*z) - x3**4*x4**4*y2/(5*z) + x1*x5**3*y5**2/25 + x2**4*y3*y4/(25*z) + x3**4*y2*y4/(25*z) + x4**4*y2*y3/(25*z) - y2*y3*y4/(125*z), x2**3*x3**2*x4*x5*y4*z**5/(5*z**5 + 5) + x2**3*x3**2*x5**6 - x2**2*x3*x4**4*y1*z**4/(5*z**5 + 5) + x1**3*x2*x4**3*y5*z**3/(5*z**5 + 5) - x1**2*x4**2*x5**3*y3*z**2/(5*z**5 + 5) - x2**3*x3**2*x5**2*y5/5 - x2**4*x3**2*x5*y2/(5*z**5 + 5) + x3**2*x5*y2**2/(25*z**5 + 25), x2**3*x3*x4*x5**2*y4*z**5/(5*z**5 + 5) + x2**3*x3*x5**7 - x2**2*x4**4*x5*y1*z**4/(5*z**5 + 5) + x1**3*x2*x4**3*y3*z**3/(5*z**5 + 5) - x1**2*x3**3*x4**2*y5*z**2/(5*z**5 + 5) - x2**3*x3*x5**3*y5/5 - x2**4*x3*x5**2*y2/(5*z**5 + 5) + x3*x5**2*y2**2/(25*z**5 + 25), x2**3*x3*x4**2*x5*y3*z**5/(5*z**5 + 5) + x2**3*x4**2*x5**6 - x2**2*x3**4*x4*y1*z**4/(5*z**5 + 5) + x1**3*x2*x3**3*y5*z**3/(5*z**5 + 5) - x1**2*x3**2*x5**3*y4*z**2/(5*z**5 + 5) - x2**3*x4**2*x5**2*y5/5 - x2**4*x4**2*x5*y2/(5*z**5 + 5) + x4**2*x5*y2**2/(25*z**5 + 25), x2**3*x3*x4*x5**2*y3*z**5/(5*z**5 + 5) + x2**3*x4*x5**7 - x2**2*x3**4*x5*y1*z**4/(5*z**5 + 5) + x1**3*x2*x3**3*y4*z**3/(5*z**5 + 5) - x1**2*x3**2*x4**3*y5*z**2/(5*z**5 + 5) - x2**3*x4*x5**3*y5/5 - x2**4*x4*x5**2*y2/(5*z**5 + 5) + x4*x5**2*y2**2/(25*z**5 + 25), x2**2*x3**3*x4*x5*y4*z**5/(5*z**5 + 5) + x2**2*x3**3*x5**6 - x2*x3**2*x4**4*y1*z**4/(5*z**5 + 5) + x1**3*x3*x4**3*y5*z**3/(5*z**5 + 5) - x1**2*x4**2*x5**3*y2*z**2/(5*z**5 + 5) - x2**2*x3**3*x5**2*y5/5 - x2**2*x3**4*x5*y3/(5*z**5 + 5) + x2**2*x5*y3**2/(25*z**5 + 25), x2**2*x3*x4*x5â€¦
>>> %Run GetPFO.py
[Could not import friendly_traceback. You can install it with Tools => Manage packages]

Traceback (most recent call last):
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 62, in <module>
    gb = get_aux_gb(LP, [x1,x2,x3])
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 59, in get_aux_gb
    return sympy.groebner(jc, varlist + get_aux_varlist(varlist), domain='QQ(z)', order='grlex')
NameError: name 'jc' is not defined
>>> %Run GetPFO.py
[-3*x1*x2*y2/4 + 3*x2**2*y1/4 + 3*x2**2*y3/4 + x3**4 + x3**2*y1 - 3*y1**2/4 - 3*y1*y3/2 + 3*y2**2/8 - 3*y3**2/4, x1*x2**2 - x1*y1 - x1*y3 - x2*y2/2 - 2*x3**3/3 + x3*y1/3 + x3*y3, -x1*y2 + x2**3 - x2*y1 - x2*y3 + x3*y2, x1**2 - x2**2 - 4*x3**2/3 + 2*y1/3 + y3, x1*x3 - x2**2/2 - x3**2 + y1/2 + y3/2, x2*x3 - y2/2]
([0, 0, 0, 0, x3, x2/2], x2*y2/4 + x3**3 - x3*y1/2 - x3*y3/2)
>>> %Run GetPFO.py
[-3*x1*x2*y2/4 + 3*x2**2*y1/4 + 3*x2**2*y3/4 + x3**4 + x3**2*y1 - 3*y1**2/4 - 3*y1*y3/2 + 3*y2**2/8 - 3*y3**2/4, x1*x2**2 - x1*y1 - x1*y3 - x2*y2/2 - 2*x3**3/3 + x3*y1/3 + x3*y3, -x1*y2 + x2**3 - x2*y1 - x2*y3 + x3*y2, x1**2 - x2**2 - 4*x3**2/3 + 2*y1/3 + y3, x1*x3 - x2**2/2 - x3**2 + y1/2 + y3/2, x2*x3 - y2/2]
([0, 0, 0, 0, x3, x2/2], x2*y2/4 + x3**3 - x3*y1/2 - x3*y3/2)
>>> %Run GetPFO.py
[Could not import friendly_traceback. You can install it with Tools => Manage packages]

Traceback (most recent call last):
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 58, in <module>
    l = HP(LP)
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 52, in __init__
    self.varlist.append([x1, x2, x3, x4, x5][num])
NameError: name 'num' is not defined
>>> %Run GetPFO.py
[Could not import friendly_traceback. You can install it with Tools => Manage packages]

Traceback (most recent call last):
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 58, in <module>
    l = HP(LP)
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 51, in __init__
    if "x" + str(varnum + 1) in str(self.eqn):
NameError: name 'varnum' is not defined
>>> %Run GetPFO.py
<__main__.HP object at 0x045DE970>
>>> l.auxgb
GroebnerBasis([x3**4 - 3*x1*x2*y2/2 + 3*x2**2*y1/2 + 3*x2**2*y3/2 + 2*x3**2*y1 - 3*y1**2 - 6*y1*y3 + 3*y2**2/2 - 3*y3**2, x1*x2**2 - 2*x3**3/3 - 2*x1*y1 - 2*x1*y3 - x2*y2 + 2*x3*y1/3 + 2*x3*y3, x2**3 - 2*x1*y2 - 2*x2*y1 - 2*x2*y3 + 2*x3*y2, x1**2 - x2**2 - 4*x3**2/3 + 4*y1/3 + 2*y3, x1*x3 - x2**2/2 - x3**2 + y1 + y3, x2*x3 - y2], x1, x2, x3, y1, y2, y3, domain='QQ(z)', order='grlex')
>>> l.jac
[3*x1**2 - 6*x1*x3 + 2*x3**2 - y1, 2*x2*x3 - y2, -3*x1**2 + 4*x1*x3 + x2**2 - y3]
>>> l.auxjac
[3*x1**2 - 6*x1*x3 + 2*x3**2 - 2*y1, 2*x2*x3 - 2*y2, -3*x1**2 + 4*x1*x3 + x2**2 - 2*y3]
>>> %Run GetPFO.py
<__main__.HP object at 0x04BBD8D0>
>>> l.jca
[Could not import friendly_traceback. You can install it with Tools => Manage packages]

Traceback (most recent call last):
  File "<pyshell>", line 1, in <module>
AttributeError: 'HP' object has no attribute 'jca'
>>> l.jac
[3*x1**2 - 6*x1*x3 + 2*x3**2, 2*x2*x3, -3*x1**2 + 4*x1*x3 + x2**2]
>>> l.auxjac
[3*x1**2 - 6*x1*x3 + 2*x3**2 - y1, 2*x2*x3 - y2, -3*x1**2 + 4*x1*x3 + x2**2 - y3]
>>> l.auxgb
GroebnerBasis([x3**4 - 3*x1*x2*y2/4 + 3*x2**2*y1/4 + 3*x2**2*y3/4 + x3**2*y1 - 3*y1**2/4 - 3*y1*y3/2 + 3*y2**2/8 - 3*y3**2/4, x1*x2**2 - 2*x3**3/3 - x1*y1 - x1*y3 - x2*y2/2 + x3*y1/3 + x3*y3, x2**3 - x1*y2 - x2*y1 - x2*y3 + x3*y2, x1**2 - x2**2 - 4*x3**2/3 + 2*y1/3 + y3, x1*x3 - x2**2/2 - x3**2 + y1/2 + y3/2, x2*x3 - y2/2], x1, x2, x3, y1, y2, y3, domain='QQ(z)', order='grlex')
>>> l.auxgb.reduce(x1)
([0, 0, 0, 0, 0, 0], x1)
>>> l.auxgb.reduce(x1**5)
([16*x1/9 + 16*x3/9, x1**2 + 4*x3**2/3 - y1 - 4*y3/3, 5*y2/2, x1**3 + 4*x1*x3**2/3 + x1*y1/3 + 11*x2*y2/6 + 2*x3**3/3 - x3*y1/3 - x3*y3, 4*x2*y2/3 - 8*x3*y1/9, 2*x2*x3**2/3 - 19*x2*y1/9 - 7*x2*y3/3 + 43*x3*y2/9], x1*y1**2/9 + 11*x1*y2**2/6 - 17*x2*y1*y2/18 - 11*x2*y2*y3/6 - 14*x3**3*y1/3 - 38*x3**3*y3/9 + 7*x3*y1**2/3 + 50*x3*y1*y3/9 - 7*x3*y2**2/9 + 11*x3*y3**2/3)
>>> l.auxgb.reduce(x1**50)
[Could not import friendly_traceback. You can install it with Tools => Manage packages]

Traceback (most recent call last):
  File "<pyshell>", line 1, in <module>
  File "C:\Users\chenyb\AppData\Local\Programs\Thonny\lib\site-packages\sympy\polys\polytools.py", line 7026, in reduce
    Q, r = polys[0].div(polys[1:])
  File "C:\Users\chenyb\AppData\Local\Programs\Thonny\lib\site-packages\sympy\polys\rings.py", line 1448, in div
    p = p._iadd_poly_monom(fv[i], (expv1, -c))
  File "C:\Users\chenyb\AppData\Local\Programs\Thonny\lib\site-packages\sympy\polys\rings.py", line 1596, in _iadd_poly_monom
    coeff = get(ka, zero) + v*c
  File "C:\Users\chenyb\AppData\Local\Programs\Thonny\lib\site-packages\sympy\polys\fields.py", line 473, in __mul__
    return f.new(f.numer*g.numer, f.denom*g.denom)
  File "C:\Users\chenyb\AppData\Local\Programs\Thonny\lib\site-packages\sympy\polys\fields.py", line 275, in new
    return f.raw_new(*numer.cancel(denom))
  File "C:\Users\chenyb\AppData\Local\Programs\Thonny\lib\site-packages\sympy\polys\rings.py", line 2225, in cancel
    cq, f = f.clear_denoms()
  File "C:\Users\chenyb\AppData\Local\Programs\Thonny\lib\site-packages\sympy\polys\rings.py", line 631, in clear_denoms
    ground_ring = domain.get_ring()
  File "C:\Users\chenyb\AppData\Local\Programs\Thonny\lib\site-packages\sympy\polys\domains\pythonrationalfield.py", line 25, in get_ring
    return PythonIntegerRing()
KeyboardInterrupt: Execution interrupted
>>> l.auxgb.reduce(x1**8)
([16*x1**4/9 + 16*x1**3*x3/9 + 4*x1**2*x3**2/9 - 80*x1**2*y1/27 - 20*x1**2*y3/9 + 148*x1*x2*y2/27 - 134*x1*x3*y1/27 - 134*x1*x3*y3/27 + 182*x2*x3*y2/27 - 56*x3**2*y1/27 - 64*x3**2*y3/27 + 1330*y1**2/81 + 250*y1*y3/9 + 215*y2**2/54 + 358*y3**2/27, x1**5 + 4*x1**3*x3**2/3 - x1**3*y1 - 4*x1**3*y3/3 + 11*x1**2*x2*y2/6 + 2*x1**2*x3**3/3 - 5*x1**2*x3*y1/3 - 7*x1**2*x3*y3/3 + 4*x1*x2*x3*y2/3 - 11*x1*x3**2*y1/9 - x1*x3**2*y3/3 + 7*x1*y1**2/3 + 35*x1*y1*y3/9 + 157*x1*y2**2/36 + 5*x1*y3**2/3 + 31*x2*x3**2*y2/9 - 56*x2*y1*y2/9 - 58*x2*y2*y3/9 - 28*x3**3*y1/9 - 32*x3**3*y3/9 + 71*x3*y1**2/18 + 77*x3*y1*y3/9 + 91*x3*y2**2/18 + 91*x3*y3**2/18, 10*x3**3*y2/3 - 1583*x3*y1*y2/108 - 539*x3*y2*y3/36, x1**6 + 4*x1**4*x3**2/3 + x1**4*y1/3 + 11*x1**3*x2*y2/6 + 2*x1**3*x3**3/3 - x1**3*x3*y1/3 - x1**3*x3*y3 + 4*x1**2*x2*x3*y2/3 - 8*x1**2*x3**2*y1/9 + x1**2*y1**2/9 - 2*x1**2*y2**2/3 + 31*x1*x2*x3**2*y2/9 - 19*x1*x2*y1*y2/9 - 7*x1*x2*y2*y3/3 - 28*x1*x3**3*y1/9 - 32*x1*x3**3*y3/9 + 2*x1*x3*y1**2/9 + 10*x1*x3*y1*y3/9 - 2*x1*x3*y2**2/3 + 4*x1*x3*y3**2/3 + 10*x2*x3**3*y2/3 - 85*x2*x3*y1*y2/18 - 121*x2*x3*y2*y3/18 + 91*x3**2*y1**2/27 + 14*x3**2*y1*y3/3 - 19*x3**2*y2**2/18 + 7*x3**2*y3**2/3 + y1**3/27 + 71*y1*y2**2/12 + 211*y2**2*y3/36, -527*x2*x3*y1*y2/54 - 115*x2*x3*y2*y3/18 + 167*x3**2*y1**2/27 + 248*x3**2*y1*y3/27 + 289*x3**2*y2**2/54 + 29*x3**2*y3**2/9 - 19*y1**3/27 - 88*y1**2*y3/27 - 35*y1*y2**2/4 - 4*y1*y3**2 - 47*y2**2*y3/4 - 5*y3**3/3, 433*x2*x3*y1**2/54 + 340*x2*x3*y1*y3/27 + 361*x2*x3*y2**2/108 + 103*x2*x3*y3**2/18 - 1541*x3**2*y1*y2/54 - 1343*x3**2*y2*y3/54 + 175*y1**2*y2/27 + 451*y1*y2*y3/27 + 361*y2**3/216 + 71*y2*y3**2/6], 115*x1*x2*y1**2*y2/9 + 22*x1*x2*y1*y2*y3 + 28*x1*x2*y2**3/9 + 97*x1*x2*y2*y3**2/9 - 341*x2**2*y1**3/27 - 313*x2**2*y1**2*y3/9 - 41*x2**2*y1*y2**2/9 - 295*x2**2*y1*y3**2/9 - 56*x2**2*y2**2*y3/9 - 97*x2**2*y3**3/9 - 2048*x3**2*y1**3/81 - 512*x3**2*y1**2*y3/9 - 22*x3**2*y1*y2**2/3 - 1216*x3**2*y1*y3**2/27 - 194*x3**2*y2**2*y3/27 - 112*x3**2*y3**3/9 + 1024*y1**4/81 + 1280*y1**3*y3/27 + y1**2*y2**2/2 + 608*y1**2*y3**2/9 + 13*y1*y2**2*y3/3 + 392*y1*y3**3/9 - 71*y2**4/108 + 71*y2**2*y3**2/18 + 97*y3**4/9)
>>> l.auxgb
GroebnerBasis([x3**4 - 3*x1*x2*y2/4 + 3*x2**2*y1/4 + 3*x2**2*y3/4 + x3**2*y1 - 3*y1**2/4 - 3*y1*y3/2 + 3*y2**2/8 - 3*y3**2/4, x1*x2**2 - 2*x3**3/3 - x1*y1 - x1*y3 - x2*y2/2 + x3*y1/3 + x3*y3, x2**3 - x1*y2 - x2*y1 - x2*y3 + x3*y2, x1**2 - x2**2 - 4*x3**2/3 + 2*y1/3 + y3, x1*x3 - x2**2/2 - x3**2 + y1/2 + y3/2, x2*x3 - y2/2], x1, x2, x3, y1, y2, y3, domain='QQ(z)', order='grlex')
>>> y1**4
y1**4
>>> y1**4.subs([(y1**2, x1)])
  File "<pyshell>", line 1
    y1**4.subs([(y1**2, x1)])
             ^
SyntaxError: invalid syntax
>>> c.subs([(y1**2, x1)])
[Could not import friendly_traceback. You can install it with Tools => Manage packages]

Traceback (most recent call last):
  File "<pyshell>", line 1, in <module>
NameError: name 'c' is not defined
>>> c = y1 **4
>>> c.subs([(y1**2, x1)])
x1**2
>>> c = y1 - y1
>>> c
0
>>> c = (-y1 - y2) + y2
>>> c
-y1
>>> %Run GetPFO.py
<__main__.HP object at 0x0532BC30>
>>> l.gb
[x3**4, x1*x2**2 - 2*x3**3/3, x2**3, x1**2 - x2**2 - 4*x3**2/3, x1*x3 - x2**2/2 - x3**2, x2*x3]
>>> %Run GetPFO.py
<__main__.HP object at 0x0524AE70>
>>> l.gbinjac
[-3*x1*x2*y2/4 + 3*x2**2*y1/4 + 3*x2**2*y3/4 + x3**2*y1 - 3*y1**2/4 - 3*y1*y3/2 + 3*y2**2/8 - 3*y3**2/4, -x1*y1 - x1*y3 - x2*y2/2 + x3*y1/3 + x3*y3, -x1*y2 - x2*y1 - x2*y3 + x3*y2, 2*y1/3 + y3, y1/2 + y3/2, -y2/2]
>>> %Run GetPFO.py
<__main__.HP object at 0x04BFE390>
>>> l.gb
[-3*x2**2*y3/4 + 3*y3**2/4, x1*y3 - x3*y3, x2*y3, -y3, -y3/2, 0]
>>> l.gbinjac
[[9*x1**2/4 - 3*x1*x3/2 - 3*x2**2/4 - x3**2/2, -3*x1*x2/4 + 3*x2*x3/4, 9*x1**2/4 - 3*x1*x3], [-x1 + x3/3, -x2/2, -x1 + x3], [-x2, -x1 + x3, -x2], [2/3, 0, 1], [1/2, 0, 1/2], [0, -1/2, 0]]
>>> %Run GetPFO.py
<__main__.HP object at 0x04ABD390>
>>> l.gb
[-x3**4, -x1*x2**2 + 2*x3**3/3, -x2**3, -x1**2 + x2**2 + 4*x3**2/3, -x1*x3 + x2**2/2 + x3**2, -x2*x3]
>>> l.gbinjac
[[9*x1**2/4 - 3*x1*x3/2 - 3*x2**2/4 - x3**2/2, -3*x1*x2/4 + 3*x2*x3/4, 9*x1**2/4 - 3*x1*x3], [-x1 + x3/3, -x2/2, -x1 + x3], [-x2, -x1 + x3, -x2], [2/3, 0, 1], [1/2, 0, 1/2], [0, -1/2, 0]]
>>> l.jac
[3*x1**2 - 6*x1*x3 + 2*x3**2, 2*x2*x3, -3*x1**2 + 4*x1*x3 + x2**2]
>>> %Run GetPFO.py
>>> l.gb
[-x5**16, -x2**2*x5**11, -x2*x5**12, -x3**2*x5**11, -x3*x5**12, -x4**2*x5**11, -x4*x5**12, -x1*x5**11 - x2**4*x3**4*x4**4/z, -x2**3*x3**2*x5**6, -x2**3*x3*x5**7, -x2**3*x4**2*x5**6, -x2**3*x4*x5**7, -x2**2*x3**3*x5**6, -x2**2*x3*x5**8, -x2**2*x4**3*x5**6, -x2**2*x4*x5**8, -x2*x3**3*x5**7, -x2*x3**2*x5**8, -x2*x4**3*x5**7, -x2*x4**2*x5**8, -x3**3*x4**2*x5**6, -x3**3*x4*x5**7, -x3**2*x4**3*x5**6, -x3**2*x4*x5**8, -x3*x4**3*x5**7, -x3*x4**2*x5**8, -x1**2*x5**8 - x2**3*x3**3*x4**3*x5*z**3, -x2**4*x3**3*x4**2*x5, -x2**4*x3**3*x4*x5**2, -x2**4*x3**2*x4**3*x5, -x2**4*x3**2*x4*x5**3, -x2**4*x3*x4**3*x5**2, -x2**4*x3*x4**2*x5**3, -x2**3*x3**4*x4**2*x5, -x2**3*x3**4*x4*x5**2, -x2**3*x3**2*x4**4*x5, -x2**3*x3**2*x4*x5**4, -x2**3*x3*x4**4*x5**2, -x2**3*x3*x4**2*x5**4, -x2**2*x3**4*x4**3*x5, -x2**2*x3**4*x4*x5**3, -x2**2*x3**3*x4**4*x5, -x2**2*x3**3*x4*x5**4, -x2**2*x3*x4**4*x5**3, -x2**2*x3*x4**3*x5**4, -x2*x3**4*x4**3*x5**2, -x2*x3**4*x4**2*x5**3, -x2*x3**3*x4**4*x5**2, -x2*x3**3*x4**2*x5**4, -x2*x3**2*x4**4*x5**3, -x2*x3**2*x4**3*x5**4, -x1**2*x2**4*x3**3 - x2**2*x3*x4**3*x5**3*z**3, -x1**2*x2**4*x4**3 - x2**2*x3**3*x4*x5**3*z**3, -x1**2*x2**4*x5**3 - x2**2*x3**3*x4**3*x5*z**3, -x1**2*x2**3*x3**4 - x2*x3**2*x4**3*x5**3*z**3, -x1**2*x2**3*x4**4 - x2*x3**3*x4**2*x5**3*z**3, -x1**2*x2**3*x5**4 - x2*x3**3*x4**3*x5**2*z**3, -x1**2*x3**4*x4**3 - x2**3*x3**2*x4*x5**3*z**3, -x1**2*x3**4*x5**3 - x2**3*x3**2*x4**3*x5*z**3, -x1**2*x3**3*x4**4 - x2**3*x3*x4**2*x5**3*z**3, -x1**2*x3**3*x5**4 - x2**3*x3*x4**3*x5**2*z**3, -x1**2*x4**4*x5**3 - x2**3*x3**3*x4**2*x5*z**3, -x1**2*x4**3*x5**4 - x2**3*x3**3*x4*x5**2*z**3, -x1*x2*x5**6 - x3**4*x4**4/z, -x1*x3*x5**6 - x2**4*x4**4/z, -x1*x4*x5**6 - x2**4*x3**4/z, -x1**3*x2**4 + x2*x3**2*x4**2*x5**2*z**2, -x1**3*x3**4 + x2**2*x3*x4**2*x5**2*z**2, -x1**3*x4**4 + x2**2*x3**2*x4*x5**2*z**2, -x1**3*x5**4 + x2**2*x3**2*x4**2*x5*z**2, -x2**5 + x5**5, -x3**5 + x5**5, -x4**5 + x5**5, -x1**4 - x2*x3*x4*x5*z, -x1*x2*x3*x4 - x5**4/z, -x1*x2*x3*x5 - x4**4/z, -x1*x2*x4*x5 - x3**4/z, -x1*x3*x4*x5 - x2**4/z]
>>> l.gbinjac
[[-x2**4*x3**4*x4**4*z**4/(5*z**5 + 5), (x2*x3*x4*x5*z**5*(5*x1*x2*x3*x5*z + 5*x4**4)*(5*x1*x2*x4*x5*z + 5*x3**4) + 5*x2*x3*x5**6*z**5*(5*x1*x2*x4*x5*z + 5*x3**4) - x2*x3*x5**2*z**5*(5*x1*x2*x3*x4*z + 5*x5**4)*(5*x1*x2*x4*x5*z + 5*x3**4) + 5*x2*x4*x5**6*z**5*(5*x1*x2*x3*x5*z + 5*x4**4) - x2*x4*x5**2*z**5*(5*x1*x2*x3*x4*z + 5*x5**4)*(5*x1*x2*x3*x5*z + 5*x4**4) + 25*x2*x5**11*z**5 - 10*x2*x5**7*z**5*(5*x1*x2*x3*x4*z + 5*x5**4) + x2*x5**3*z**5*(5*x1*x2*x3*x4*z + 5*x5**4)**2)/(125*z**5 + 125), (5*x3*x4*x5**6*z**5*(5*x1*x2*x3*x5*z + 5*x4**4) - x3*x4*x5**2*z**5*(5*x1*x2*x3*x4*z + 5*x5**4)*(5*x1*x2*x3*x5*z + 5*x4**4) + 25*x3*x5**11*z**5 - 10*x3*x5**7*z**5*(5*x1*x2*x3*x4*z + 5*x5**4) + x3*x5**3*z**5*(5*x1*x2*x3*x4*z + 5*x5**4)**2)/(125*z**5 + 125), (25*x4*x5**11*z**5 - 10*x4*x5**7*z**5*(5*x1*x2*x3*x4*z + 5*x5**4) + x4*x5**3*z**5*(5*x1*x2*x3*x4*z + 5*x5**4)**2)/(125*z**5 + 125), -(375*x5**12*z**5 + 500*x5**12 - 75*x5**8*z**5*(5*x1*x2*x3*x4*z + 5*x5**4) - 150*x5**8*(5*x1*x2*x3*x4*z + 5*x5**4) + 5*x5**4*z**5*(5*x1*x2*x3*x4*z + 5*x5**4)**2 + 20*x5**4*(5*x1*x2*x3*x4*z + 5*x5**4)**2 - (5*x1*x2*x3*x4*z + 5*x5**4)**3)/(625*z**5 + 625)], [-x2*x3**4*x4**4*z**4/(5*z**5 + 5), (5*x2**4*x5*(5*x1*x3*x4*x5*z + 5*x2**4) - 25*x2**3*x5**6 + 5*x2**3*x5**2*(5*x1*x2*x3*x4*z + 5*x5**4) - x5*(5*x1*x3*x4*x5*z + 5*x2**4)**2)/(125*z**5 + 125), (x2**2*x3*x4*x5*z**5*(5*x1*x2*x3*x5*z + 5*x4**4) + 5*x2**2*x3*x5**6*z**5 - x2**2*x3*x5**2*z**5*(5*x1*x2*x3*x4*z + 5*x5**4))/(25*z**5 + 25), (5*x2**2*x4*x5**6*z**5 - x2**2*x4*x5**2*z**5*(5*x1*x2*x3*x4*z + 5*x5**4))/(25*z**5 + 25), (5*x1**3*x3**3*x4**3*z**3 - 10*x2**2*x5**7*z**5 - 10*x2**2*x5**7 + x2**2*x5**3*z**5*(5*x1*x2*x3*x4*z + 5*x5**4) + x2**2*x5**3*(5*x1*x2*x3*x4*z + 5*x5**4))/(25*z**5 + 25)], [-x3**4*x4**4*x5*z**4/(5*z**5 + 5), x1**3*x3**3*x4**3*z**3/(5*z**5 + 5), (x2*x3*x4*x5**2*z**5*(5*x1*x2*x3*x5*z + 5*x4**4) + 5*x2*x3*x5**7*z**5 - x2*x3*x5**3*z**5*(5*x1*x2*x3*x4*z + 5*x5**4))/(25*z**5 + 25), (5*x2*x4*x5**7*z**5 - x2*x4*x5**3*z**5*(5*x1*x2*x3*x4*z + 5*x5**4))/(25*z**5 + 25), -(50*x2*x5**8*z**5 + 75*x2*x5**8 - 5*x2*x5**4*z**5*(5*x1*x2*x3*x4*z + 5*x5**4) - 15*x2*x5**4*(5*x1*x2*x3*x4*z + 5*x5**4) + x2*(5*x1*x2*x3*x4*z + 5*x5**4)**2)/(125*z**5 + 125)], [-x2**4*x3*x4**4*z**4/(5*z**5 + 5), (x2*x3**2*x4*x5*z**5*(5*x1*x2*x3*x5*z + 5*x4**4) + 5*x2*x3**2*x5**6*z**5 - x2*x3**2*x5**2*z**5*(5*x1*x2*x3*x4*z + 5*x5**4))/(25*z**5 + 25), (5*x3**4*x5*(5*x1*x2*x4*x5*z + 5*x3**4) - 25*x3**3*x5**6 + 5*x3**3*x5**2*(5*x1*x2*x3*x4*z + 5*x5**4) - x5*(5*x1*x2*x4*x5*z + 5*x3**4)**2)/(125*z**5 + 125), (5*x3**2*x4*x5**6*z**5 - x3**2*x4*x5**2*z**5*(5*x1*x2*x3*x4*z + 5*x5**4))/(25*z**5 + 25), (5*x1**3*x2**3*x4**3*z**3 - 10*x3**2*x5**7*z**5 - 10*x3**2*x5**7 + x3**2*x5**3*z**5*(5*x1*x2*x3*x4*z + 5*x5**4) + x3**2*x5**3*(5*x1*x2*x3*x4*z + 5*x5**4))/(25*z**5 + 25)], [-x2**4*x4**4*x5*z**4/(5*z**5 + 5), (x2*x3*x4*x5**2*z**5*(5*x1*x2*x3*x5*z + 5*x4**4) + 5*x2*x3*x5**7*z**5 - x2*x3*x5**3*z**5*(5*x1*x2*x3*x4*z + 5*x5**4))/(25*z**5 + 25), x1**3*x2**3*x4**3*z**3/(5*z**5 + 5), (5*x3*x4*x5**7*z**5 - x3*x4*x5**3*z**5*(5*x1*x2*x3*x4*z + 5*x5**4))/(25*z**5 + 25), -(50*x3*x5**8*z**5 + 75*x3*x5**8 - 5*x3*x5**4*z**5*(5*x1*x2*x3*x4*z + 5*x5**4) - 15*x3*x5**4*(5*x1*x2*x3*x4*z + 5*x5**4) + x3*(5*x1*x2*x3*x4*z + 5*x5**4)**2)/(125*z**5 + 125)], [-x2**4*x3**4*x4*z**4/(5*z**5 + 5), (x2*x3*x4**2*x5*z**5*(5*x1*x2*x4*x5*z + 5*x3**4) + 5*x2*x4**2*x5**6*z**5 - x2*x4**2*x5**2*z**5*(5*x1*x2*x3*x4*z + 5*x5**4))/(25*z**5 + 25), (5*x3*x4**2*x5**6*z**5 - x3*x4**2*x5**2*z**5*(5*x1*x2*x3*x4*z + 5*x5**4))/(25*z**5 + 25), (5*x4**4*x5*(5*x1*x2*x3*x5*z + 5*x4**4) - 25*x4**3*x5**6 + 5*x4**3*x5**2*(5*x1*x2*x3*x4*z + 5*x5**4) - x5*(5*x1*x2*x3*x5*z + 5*x4**4)**2)/(125*z**5 + 125), (5*x1**3*x2**3*x3**3*z**3 - 10*x4**2*x5**7*z**5 - 10*x4**2*x5**7 + x4**2*x5**3*z**5*(5*x1*x2*x3*x4*z + 5*x5**4) + x4**2*x5**3*(5*x1*x2*x3*x4*z + 5*x5**4))/(25*z**5 + 25)], [-x2**4*x3**4*x5*z**4/(5*z**5 + 5), (x2*x3*x4*x5**2*z**5*(5*x1*x2*x4*x5*z + 5*x3**4) + 5*x2*x4*x5**7*z**5 - x2*x4*x5**3*z**5*(5*x1*x2*x3*x4*z + 5*x5**4))/(25*z**5 + 25), (5*x3*x4*x5**7*z**5 - x3*x4*x5**3*z**5*(5*x1*x2*x3*x4*z + 5*x5**4))/(25*z**5 + 25), x1**3*x2**3*x3**3*z**3/(5*z**5 + 5), -(50*x4*x5**8*z**5 + 75*x4*x5**8 - 5*x4*x5**4*z**5*(5*x1*x2*x3*x4*z + 5*x5**4) - 15*x4*x5**4*(5*x1*x2*x3*x4*z + 5*x5**4) + x4*(5*x1*x2*x3*x4*z + 5*x5**4)**2)/(125*z**5 + 125)], [0, -(25*x3**4*x4**4 - 5*x3**4*(5*x1*x2*x3*x5*z + 5*x4**4) - 5*x4**4*(5*x1*x2*x4*x5*z + 5*x3**4) + (5*x1*x2*x3*x5*z + 5*x4**4)*(5*x1*x2*x4*x5*z + 5*x3**4))/(125*z), -(5*x2**4*x4**4 - x2**4*(5*x1*x2*x3*x5*z + 5*x4**4))/(25*z), -x2**4*x3**4/(5*z), -2*x1*x5**7/5 + x1*x5**3*(5*x1*x2*x3*x4*z + 5*x5**4)/25], [-x2**2*x3*x4**4*z**4/(5*z**5 + 5), -(5*x2**4*x3**2*x5 - x3**2*x5*(5*x1*x3*x4*x5*z + 5*x2**4))/(25*z**5 + 25), -x1**2*x4**2*x5**3*z**2/(5*z**5 + 5), x2**3*x3**2*x4*x5*z**5/(5*z**5 + 5), (x1**3*x2*x4**3*z**3 - x2**3*x3**2*x5**2*z**5 - x2**3*x3**2*x5**2)/(5*z**5 + 5)], [-x2**2*x4**4*x5*z**4/(5*z**5 + 5), -(5*x2**4*x3*x5**2 - x3*x5**2*(5*x1*x3*x4*x5*z + 5*x2**4))/(25*z**5â€¦
>>> len(l.gb)
78
>>> %Run GetPFO.py
>>> len(l.gb)
7
>>> %Run GetPFO.py
>>> len(l.gb)
8
>>> l.gb
[-x4**7, -x2*x4**5 - 18*x4**6*z**3, -x2**2*x4**3 + x2*x4**4/(6*z**2), -x1**4, -x2**4 - 3*x2**2*x4**2*z, -x2**3*x4 - x4**4/(2*z), -x3**4, -x5**4]
>>> l.jac
[5*x1**4, 5*x2**2*(x2**2 + 3*x4**2*z), 5*x3**4, 5*x4*(2*x2**3*z + x4**3), 5*x5**4]
>>> %Run GetPFO.py
>>> l.gb
[-x4**7, -x2*x4**5 - 18*x4**6*z**3, -x2**2*x4**3 + x2*x4**4/(6*z**2), -x1**4, -x2**4 - 3*x2**2*x4**2*z, -x2**3*x4 - x4**4/(2*z), -x3**4, -x5**4]
>>> l.jac
[x1**4*(25*z + 5), 5*x2**2*(x2**2 + 3*x4**2*z), 5*x3**4, 5*x4*(2*x2**3*z + x4**3), 5*x5**4]
>>> %Run GetPFO.py
>>> print(l.gb)

>>> len(l.gb)
34
>>> %Run GetPFO.py
>>> %Run GetPFO.py
>>> len(l.gb)
21
>>> %Run GetPFO.py
>>> l.reduced(x1)
([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], x1)
>>> l.reduced(y1)
([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], y1)
>>> l.reduced(x1**5)
([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -x1**2, x1*x4*z/4, 0, 0], x1*x4**4)
>>> l.reduced(x1**5 * y1)
([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -x1**2*y1, x1*x4*y1*z/4, 0, 0], x1*x4**4*y1)
>>> %Run GetPFO.py
>>> l.reduced(x1**5 * y1)
[Could not import friendly_traceback. You can install it with Tools => Manage packages]

Traceback (most recent call last):
  File "C:\Users\chenyb\AppData\Local\Programs\Thonny\lib\site-packages\sympy\polys\fields.py", line 247, in from_expr
    frac = self._rebuild_expr(expr, mapping)
  File "C:\Users\chenyb\AppData\Local\Programs\Thonny\lib\site-packages\sympy\polys\fields.py", line 241, in _rebuild_expr
    return _rebuild(sympify(expr))
  File "C:\Users\chenyb\AppData\Local\Programs\Thonny\lib\site-packages\sympy\polys\fields.py", line 234, in _rebuild
    return domain.convert(expr)
  File "C:\Users\chenyb\AppData\Local\Programs\Thonny\lib\site-packages\sympy\polys\domains\domain.py", line 146, in convert
    return self.from_sympy(element)
  File "C:\Users\chenyb\AppData\Local\Programs\Thonny\lib\site-packages\sympy\polys\domains\pythonrationalfield.py", line 40, in from_sympy
    raise CoercionFailed("expected `Rational` object, got %s" % a)
sympy.polys.polyerrors.CoercionFailed: expected `Rational` object, got y1

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "<pyshell>", line 1, in <module>
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 73, in reduced
    gbred = sympy.reduced(inpoly, self.gb, self.varlist, domain='QQ(z)')
  File "C:\Users\chenyb\AppData\Local\Programs\Thonny\lib\site-packages\sympy\polys\polytools.py", line 6685, in reduced
    polys, opt = parallel_poly_from_expr([f] + list(G), *gens, **args)
  File "C:\Users\chenyb\AppData\Local\Programs\Thonny\lib\site-packages\sympy\polys\polytools.py", line 4309, in parallel_poly_from_expr
    return _parallel_poly_from_expr(exprs, opt)
  File "C:\Users\chenyb\AppData\Local\Programs\Thonny\lib\site-packages\sympy\polys\polytools.py", line 4388, in _parallel_poly_from_expr
    coeffs_list = list(map(domain.from_sympy, coeffs_list))
  File "C:\Users\chenyb\AppData\Local\Programs\Thonny\lib\site-packages\sympy\polys\domains\fractionfield.py", line 78, in from_sympy
    return self.field.from_expr(a)
  File "C:\Users\chenyb\AppData\Local\Programs\Thonny\lib\site-packages\sympy\polys\fields.py", line 249, in from_expr
    raise ValueError("expected an expression convertible to a rational function in %s, got %s" % (self, expr))
ValueError: expected an expression convertible to a rational function in Rational function field in z over QQ with lex order, got y1
>>> %Run GetPFO.py
>>> l.reduced(x1**5 * y1)
([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -x1**2*y1, x1*x4*y1*z/4, 0, 0], x1*x4**4*y1)
>>> l.reduced(x1**5)
([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -x1**2, x1*x4*z/4, 0, 0], x1*x4**4)
>>> l.reduced(x1**3)
([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0], -x2*x3*x4*z/4)
>>> l.reduced(x1**8)
([0, 0, 0, 0, 0, x2*x3*z/4, 0, 0, 0, 0, 0, 0, 0, 0, 0, -x3**4, -x4**4, -x1**5 + x1**2*x2*x3*x4*z/4, -x1*x2*x3*x4**2*z**2/16, 0, 0], x4**8)
>>> l.reduced(x1**20)
([0, 0, 0, 0, 0, 0, x1**11*x3*x4**2*z**3/64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -x1**17 + x1**14*x2*x3*x4*z/4 - x1**11*x2**2*x3**2*x4**2*z**2/16, 0, 0, 0], 0)
>>> l.reduced(x1**80)
([0, 0, 0, 0, 0, 0, x1**71*x3*x4**2*z**3/64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -x1**77 + x1**74*x2*x3*x4*z/4 - x1**71*x2**2*x3**2*x4**2*z**2/16, 0, 0, 0], 0)
>>> %Run GetPFO.py
>>> l.reduced(x1**80)
([0, 0, 0, 0, 0, 0, x1**71*x3*x4**2*z**3/64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -x1**77 + x1**74*x2*x3*x4*z/4 - x1**71*x2**2*x3**2*x4**2*z**2/16, 0, 0, 0], 0)
([x1**77/4 - x1**74*x2*x3*x4*z/16 - x1**71*x2**2*x3**2*x4**2*z**6/(64*(z**4 - 256)) + x1**71*x2**2*x3**2*x4**2*z**2/64, x1**71*x3**3*x4**3*z**3/(z**4 - 256), -x1**72*x3*x4**4*z**4/(4*(z**4 - 256)), x1**73*x2*x3*x4**2*z**5/(16*(z**4 - 256))], 0)
>>> l.reduced(x1)
([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], x1)
([0, 0, 0, 0], x1)
>>> %Run GetPFO.py
>>> l.reduced(x1**2)
([0, 0, 0, 0], x1**2)
>>> l.jac
[4*x1**3 + x2*x3*x4*z, x1*x3*x4*z + 4*x2**3, x1*x2*x4*z + 4*x3**3, x1*x2*x3*z + 4*x4**3]
>>> l.reduced(x1**3)
([1/4, 0, 0, 0], -x2*x3*x4*z/4)
>>> l.reduced(x1**4)
([x1/4, 0, 0, -x4/4], x4**4)
>>> l.reduced(x1**2 * x2**2)
([0, 0, 0, 0], x1**2*x2**2)
>>> l.reduced(x1**2 * x2**3)
([-x3*x4*z/16, x1**2/4, 0, 0], x2*x3**2*x4**2*z**2/16)
>>> l.reduced(x1**2 * x2**5)
([x2**2*x3*x4*z**5/(16*(z**4 - 256)) - x2**2*x3*x4*z/16, x1**2*x2**2/4 - 4*x3**2*x4**2*z**2/(z**4 - 256), x1*x4**3*z**3/(z**4 - 256), -x1**2*x2*x4*z**4/(4*(z**4 - 256))], 0)
>>> l.reduced(x1**2 * x2**5)
([x2**2*x3*x4*z**5/(16*(z**4 - 256)) - x2**2*x3*x4*z/16, x1**2*x2**2/4 - 4*x3**2*x4**2*z**2/(z**4 - 256), x1*x4**3*z**3/(z**4 - 256), -x1**2*x2*x4*z**4/(4*(z**4 - 256))], 0)
>>> l.reduced(x1**2 * x4**5)
([16*x2*x3*x4**2*z/(z**4 - 256), -x1**2*x2*x4/4 + 256*x1*x3**3/(z*(z**4 - 256)), -64*x1**2*x3*x4/(z**4 - 256) + x1*x2**3/z, x1**2*x4**2/4 - 4*x2**2*x3**2/z**2 - 1024*x2**2*x3**2/(z**2*(z**4 - 256))], 0)
>>> l.reduced(x1**2 * x3**5)
([x2*x3**2*x4*z**5/(16*(z**4 - 256)) - x2*x3**2*x4*z/16, x1*x4**3*z**3/(z**4 - 256), x1**2*x3**2/4 - 4*x2**2*x4**2*z**2/(z**4 - 256), -x1**2*x3*x4*z**4/(4*(z**4 - 256))], 0)
>>> l.reduced(x1**2 * x1**5)
([x1**4/4 - x1*x2*x3*x4*z/16, 0, 0, x2*x3*x4**2*z/16], -x2*x3*x4**5*z/4)
>>> l.reduced(x1**2 * x3**5)
([x2*x3**2*x4*z**5/(16*(z**4 - 256)) - x2*x3**2*x4*z/16, x1*x4**3*z**3/(z**4 - 256), x1**2*x3**2/4 - 4*x2**2*x4**2*z**2/(z**4 - 256), -x1**2*x3*x4*z**4/(4*(z**4 - 256))], 0)
>>> l.reduced(x4**2 * x3**5)
([x2**3*x4*z**3/(z**4 - 256), -x2*x3*x4**2*z**4/(4*z**4 - 1024), -4*x1**2*x2**2*z**2/(z**4 - 256) + x3**2*x4**2/4, -x3*x4**3/4 + (x3*x4**3*z**4 - 512*x3*x4**3 + 64*x3*(x1*x2*x3*z + 4*x4**3))/(4*z**4 - 1024)], 0)
>>> l.jac
[4*x1**3 + x2*x3*x4*z, x1*x3*x4*z + 4*x2**3, x1*x2*x4*z + 4*x3**3, x1*x2*x3*z + 4*x4**3]
>>> l = HP(LP)
>>> l.reduced(x4**2 * x3**5)
([-x3*x4**2*(6*x1**2*z + 3*x1**2 - 10*x1*x3*z + 2*x1*x3 + 3*x2**2*z - 3*x2**2 - 2*x3**2*z**3 + 8*x3**2*z**2 - 3*x3**2*z - z**2*(3*x1**2 - 2*x1*x3*z - 2*x1*x3 + x3**2*z) - 2*z*(3*x1**2 - 2*x1*x3*z - 2*x1*x3 + x3**2*z) - 6*z*(-x1**2*z - x1**2 + 2*x1*x3*z + x2**2))/(3*z**4 - 6*z**3 + 3*z**2), x3*x4**2*(12*x1*x2*z**2 - 12*x1*x2*z + 12*x1*x2 - 8*x2*x3*z**3 + 6*x2*x3*z**2 + 6*x2*x3*z - 8*x2*x3)/(12*z**4 - 24*z**3 + 12*z**2), -x3*x4**2*(9*x1**2*z + 9*x1**2 - 18*x1*x3*z - 4*x3**2*z**3 + 6*x3**2*z**2 + 6*x3**2*z - 4*x3**2)/(3*z**4 - 6*z**3 + 3*z**2)], 0)
>>> l.reduced(x4**5 * x3**5)
([-x3*x4**5*(6*x1**2*z + 3*x1**2 - 10*x1*x3*z + 2*x1*x3 + 3*x2**2*z - 3*x2**2 - 2*x3**2*z**3 + 8*x3**2*z**2 - 3*x3**2*z - z**2*(3*x1**2 - 2*x1*x3*z - 2*x1*x3 + x3**2*z) - 2*z*(3*x1**2 - 2*x1*x3*z - 2*x1*x3 + x3**2*z) - 6*z*(-x1**2*z - x1**2 + 2*x1*x3*z + x2**2))/(3*z**4 - 6*z**3 + 3*z**2), x3*x4**5*(12*x1*x2*z**2 - 12*x1*x2*z + 12*x1*x2 - 8*x2*x3*z**3 + 6*x2*x3*z**2 + 6*x2*x3*z - 8*x2*x3)/(12*z**4 - 24*z**3 + 12*z**2), -x3*x4**5*(9*x1**2*z + 9*x1**2 - 18*x1*x3*z - 4*x3**2*z**3 + 6*x3**2*z**2 + 6*x3**2*z - 4*x3**2)/(3*z**4 - 6*z**3 + 3*z**2)], 0)
>>> l.reduced(x4**5 * x3**8)
([-x3**4*x4**5*(6*x1**2*z + 3*x1**2 - 10*x1*x3*z + 2*x1*x3 + 3*x2**2*z - 3*x2**2 - 2*x3**2*z**3 + 8*x3**2*z**2 - 3*x3**2*z - z**2*(3*x1**2 - 2*x1*x3*z - 2*x1*x3 + x3**2*z) - 2*z*(3*x1**2 - 2*x1*x3*z - 2*x1*x3 + x3**2*z) - 6*z*(-x1**2*z - x1**2 + 2*x1*x3*z + x2**2))/(3*z**4 - 6*z**3 + 3*z**2), x3**4*x4**5*(12*x1*x2*z**2 - 12*x1*x2*z + 12*x1*x2 - 8*x2*x3*z**3 + 6*x2*x3*z**2 + 6*x2*x3*z - 8*x2*x3)/(12*z**4 - 24*z**3 + 12*z**2), -x3**4*x4**5*(9*x1**2*z + 9*x1**2 - 18*x1*x3*z - 4*x3**2*z**3 + 6*x3**2*z**2 + 6*x3**2*z - 4*x3**2)/(3*z**4 - 6*z**3 + 3*z**2)], 0)
>>> l.reduced(x4**5 * x3**19)
([-x3**15*x4**5*(6*x1**2*z + 3*x1**2 - 10*x1*x3*z + 2*x1*x3 + 3*x2**2*z - 3*x2**2 - 2*x3**2*z**3 + 8*x3**2*z**2 - 3*x3**2*z - z**2*(3*x1**2 - 2*x1*x3*z - 2*x1*x3 + x3**2*z) - 2*z*(3*x1**2 - 2*x1*x3*z - 2*x1*x3 + x3**2*z) - 6*z*(-x1**2*z - x1**2 + 2*x1*x3*z + x2**2))/(3*z**4 - 6*z**3 + 3*z**2), x3**15*x4**5*(12*x1*x2*z**2 - 12*x1*x2*z + 12*x1*x2 - 8*x2*x3*z**3 + 6*x2*x3*z**2 + 6*x2*x3*z - 8*x2*x3)/(12*z**4 - 24*z**3 + 12*z**2), -x3**15*x4**5*(9*x1**2*z + 9*x1**2 - 18*x1*x3*z - 4*x3**2*z**3 + 6*x3**2*z**2 + 6*x3**2*z - 4*x3**2)/(3*z**4 - 6*z**3 + 3*z**2)], 0)
>>> l.reduced(x4**15 * x3**19)
([-x3**15*x4**15*(6*x1**2*z + 3*x1**2 - 10*x1*x3*z + 2*x1*x3 + 3*x2**2*z - 3*x2**2 - 2*x3**2*z**3 + 8*x3**2*z**2 - 3*x3**2*z - z**2*(3*x1**2 - 2*x1*x3*z - 2*x1*x3 + x3**2*z) - 2*z*(3*x1**2 - 2*x1*x3*z - 2*x1*x3 + x3**2*z) - 6*z*(-x1**2*z - x1**2 + 2*x1*x3*z + x2**2))/(3*z**4 - 6*z**3 + 3*z**2), x3**15*x4**15*(12*x1*x2*z**2 - 12*x1*x2*z + 12*x1*x2 - 8*x2*x3*z**3 + 6*x2*x3*z**2 + 6*x2*x3*z - 8*x2*x3)/(12*z**4 - 24*z**3 + 12*z**2), -x3**15*x4**15*(9*x1**2*z + 9*x1**2 - 18*x1*x3*z - 4*x3**2*z**3 + 6*x3**2*z**2 + 6*x3**2*z - 4*x3**2)/(3*z**4 - 6*z**3 + 3*z**2)], 0)
>>> l.reduced(x2**15 * x3**14 * x1)
([-x1*x2**15*x3**10*(6*x1**2*z + 3*x1**2 - 10*x1*x3*z + 2*x1*x3 + 3*x2**2*z - 3*x2**2 - 2*x3**2*z**3 + 8*x3**2*z**2 - 3*x3**2*z - z**2*(3*x1**2 - 2*x1*x3*z - 2*x1*x3 + x3**2*z) - 2*z*(3*x1**2 - 2*x1*x3*z - 2*x1*x3 + x3**2*z) - 6*z*(-x1**2*z - x1**2 + 2*x1*x3*z + x2**2))/(3*z**4 - 6*z**3 + 3*z**2), x1*x2**15*x3**10*(12*x1*x2*z**2 - 12*x1*x2*z + 12*x1*x2 - 8*x2*x3*z**3 + 6*x2*x3*z**2 + 6*x2*x3*z - 8*x2*x3)/(12*z**4 - 24*z**3 + 12*z**2), -x1*x2**15*x3**10*(9*x1**2*z + 9*x1**2 - 18*x1*x3*z - 4*x3**2*z**3 + 6*x3**2*z**2 + 6*x3**2*z - 4*x3**2)/(3*z**4 - 6*z**3 + 3*z**2)], 0)
>>> l.reduced(x2**10 * x3**14 * x1)
([-x1*x2**10*x3**10*(6*x1**2*z + 3*x1**2 - 10*x1*x3*z + 2*x1*x3 + 3*x2**2*z - 3*x2**2 - 2*x3**2*z**3 + 8*x3**2*z**2 - 3*x3**2*z - z**2*(3*x1**2 - 2*x1*x3*z - 2*x1*x3 + x3**2*z) - 2*z*(3*x1**2 - 2*x1*x3*z - 2*x1*x3 + x3**2*z) - 6*z*(-x1**2*z - x1**2 + 2*x1*x3*z + x2**2))/(3*z**4 - 6*z**3 + 3*z**2), x1*x2**10*x3**10*(12*x1*x2*z**2 - 12*x1*x2*z + 12*x1*x2 - 8*x2*x3*z**3 + 6*x2*x3*z**2 + 6*x2*x3*z - 8*x2*x3)/(12*z**4 - 24*z**3 + 12*z**2), -x1*x2**10*x3**10*(9*x1**2*z + 9*x1**2 - 18*x1*x3*z - 4*x3**2*z**3 + 6*x3**2*z**2 + 6*x3**2*z - 4*x3**2)/(3*z**4 - 6*z**3 + 3*z**2)], 0)
>>> l.reduced(x2**10)
([-x2**7*(-x2*z/3 - x2/3), -x2**7*(-x1*z**2/3 + x1*z/3 - x1/3 + x3*z**2/6 + x3*z/6), x2**8], 0)
>>> l.reduced(x2**8)
([-x2**5*(-x2*z/3 - x2/3), -x2**5*(-x1*z**2/3 + x1*z/3 - x1/3 + x3*z**2/6 + x3*z/6), x2**6], 0)
>>> l.reduced(x2**6)
([-x2**3*(-x2*z/3 - x2/3), -x2**3*(-x1*z**2/3 + x1*z/3 - x1/3 + x3*z**2/6 + x3*z/6), x2**4], 0)
>>> l.reduced(x2**5)
([-x2**2*(-x2*z/3 - x2/3), -x2**2*(-x1*z**2/3 + x1*z/3 - x1/3 + x3*z**2/6 + x3*z/6), x2**3], 0)
>>> l.reduced(x2**2)
([0, 0, 0], x2**2)
>>> l.reduced((x1 + x2)**8)
([z*(-x1**6 - 8*x1**5*x2 - x1**4*x3**2*z**2/(z**2 - z + 1) - 8*x1**3*x2*x3**2*z**2/(z**2 - z + 1) + x1**3*x3**3*(-28*z**6 + 83*z**5 - 111*z**4 + 85*z**3 - 29*z**2)/(2*z**4 - 4*z**3 + 6*z**2 - 4*z + 2) + x1**2*x2*x3**3*(-28*z**6 + 80*z**5 - 108*z**4 + 88*z**3 - 32*z**2)/(z**4 - 2*z**3 + 3*z**2 - 2*z + 1))/(z**2 - z + 1) + (-x2**5 + x2**2*x3**3*(-4*z**4 + 8*z**3 - 4*z**2)/(z**2 - z + 1))*(-x2*z/3 - x2/3) + (-x1**4*z**4/(z**4 - 2*z**3 + 3*z**2 - 2*z + 1) - 8*x1**3*x2*z**4/(z**4 - 2*z**3 + 3*z**2 - 2*z + 1) + x1**3*x3*(-14*z**8 + 41*z**7 - 55*z**6 + 43*z**5 - 15*z**4)/(z**6 - 3*z**5 + 6*z**4 - 7*z**3 + 6*z**2 - 3*z + 1) + x1**2*x2*x3*(-28*z**8 + 76*z**7 - 104*z**6 + 92*z**5 - 36*z**4)/(z**6 - 3*z**5 + 6*z**4 - 7*z**3 + 6*z**2 - 3*z + 1) + x1**2*x3**2*(-70*z**12 + 392*z**11 - 1079*z**10 + 1934*z**9 - 2435*z**8 + 2180*z**7 - 1357*z**6 + 534*z**5 - 99*z**4)/(4*z**8 - 16*z**7 + 40*z**6 - 64*z**5 + 76*z**4 - 64*z**3 + 40*z**2 - 16*z + 4) + x1*x2*x3**2*(-14*z**12 + 70*z**11 - 184*z**10 + 340*z**9 - 460*z**8 + 454*z**7 - 320*z**6 + 144*z**5 - 30*z**4)/(z**8 - 4*z**7 + 10*z**6 - 16*z**5 + 19*z**4 - 16*z**3 + 10*z**2 - 4*z + 1) + x2**2*x3**2*(-7*z**8 + 28*z**7 - 42*z**6 + 28*z**5 - 7*z**4)/(z**4 - 2*z**3 + 3*z**2 - 2*z + 1))*(6*x1**2*z + 3*x1**2 - 10*x1*x3*z + 2*x1*x3 + 3*x2**2*z - 3*x2**2 - 2*x3**2*z**3 + 8*x3**2*z**2 - 3*x3**2*z - z**2*(3*x1**2 - 2*x1*x3*z - 2*x1*x3 + x3**2*z) - 2*z*(3*x1**2 - 2*x1*x3*z - 2*x1*x3 + x3**2*z) - 6*z*(-x1**2*z - x1**2 + 2*x1*x3*z + x2**2))/(3*z**4 - 6*z**3 + 3*z**2) - (2*x1*z**3 + 2*x1 - 3*x3*z**3 + 6*x3*z**2 - 3*x3*z)*(x1**5*(-28*z**2 + 27*z - 29)/(z**2 - z + 1) + x1**4*x2*(-56*z**2 + 48*z - 64)/(z**2 - z + 1) - 70*x1**3*x2**2 + x1**3*x3**2*(-z**3 - z**2)/(z**4 - 2*z**3 + 3*z**2 - 2*z + 1) - 56*x1**2*x2**3 + x1**2*x2*x3**2*(-8*z**3 - 8*z**2)/(z**4 - 2*z**3 + 3*z**2 - 2*z + 1) + x1**2*x3**3*(-70*z**8 + 252*z**7 - 505*z**6 + 672*z**5 - 586*z**4 + 336*z**3 - 99*z**2)/(2*z**6 - 6*z**5 + 12*z**4 - 14*z**3 + 12*z**2 - 6*z + 2) - 28*x1*x2**4 + x1*x2*x3**3*(-28*z**8 + 84*z**7 - 172*z**6 + 252*z**5 - 244*z**4 + 168*z**3 - 60*z**2)/(z**6 - 3*z**5 + 6*z**4 - 7*z**3 + 6*z**2 - 3*z + 1) - 8*x2**5 + x2**2*x3**3*(-14*z**4 + 28*z**3 - 14*z**2)/(z**2 - z + 1))/(6*z**2 - 6*z + 6), (-x2**5 + x2**2*x3**3*(-4*z**4 + 8*z**3 - 4*z**2)/(z**2 - z + 1))*(-x1*z**2/3 + x1*z/3 - x1/3 + x3*z**2/6 + x3*z/6) - (12*x1*x2*z**2 - 12*x1*x2*z + 12*x1*x2 - 8*x2*x3*z**3 + 6*x2*x3*z**2 + 6*x2*x3*z - 8*x2*x3)*(-x1**4*z**4/(z**4 - 2*z**3 + 3*z**2 - 2*z + 1) - 8*x1**3*x2*z**4/(z**4 - 2*z**3 + 3*z**2 - 2*z + 1) + x1**3*x3*(-14*z**8 + 41*z**7 - 55*z**6 + 43*z**5 - 15*z**4)/(z**6 - 3*z**5 + 6*z**4 - 7*z**3 + 6*z**2 - 3*z + 1) + x1**2*x2*x3*(-28*z**8 + 76*z**7 - 104*z**6 + 92*z**5 - 36*z**4)/(z**6 - 3*z**5 + 6*z**4 - 7*z**3 + 6*z**2 - 3*z + 1) + x1**2*x3**2*(-70*z**12 + 392*z**11 - 1079*z**10 + 1934*z**9 - 2435*z**8 + 2180*z**7 - 1357*z**6 + 534*z**5 - 99*z**4)/(4*z**8 - 16*z**7 + 40*z**6 - 64*z**5 + 76*z**4 - 64*z**3 + 40*z**2 - 16*z + 4) + x1*x2*x3**2*(-14*z**12 + 70*z**11 - 184*z**10 + 340*z**9 - 460*z**8 + 454*z**7 - 320*z**6 + 144*z**5 - 30*z**4)/(z**8 - 4*z**7 + 10*z**6 - 16*z**5 + 19*z**4 - 16*z**3 + 10*z**2 - 4*z + 1) + x2**2*x3**2*(-7*z**8 + 28*z**7 - 42*z**6 + 28*z**5 - 7*z**4)/(z**4 - 2*z**3 + 3*z**2 - 2*z + 1))/(12*z**4 - 24*z**3 + 12*z**2) - (4*x2*z**3 - 3*x2*z**2 - 3*x2*z + 4*x2)*(x1**5*(-28*z**2 + 27*z - 29)/(z**2 - z + 1) + x1**4*x2*(-56*z**2 + 48*z - 64)/(z**2 - z + 1) - 70*x1**3*x2**2 + x1**3*x3**2*(-z**3 - z**2)/(z**4 - 2*z**3 + 3*z**2 - 2*z + 1) - 56*x1**2*x2**3 + x1**2*x2*x3**2*(-8*z**3 - 8*z**2)/(z**4 - 2*z**3 + 3*z**2 - 2*z + 1) + x1**2*x3**3*(-70*z**8 + 252*z**7 - 505*z**6 + 672*z**5 - 586*z**4 + 336*z**3 - 99*z**2)/(2*z**6 - 6*z**5 + 12*z**4 - 14*z**3 + 12*z**2 - 6*z + 2) - 28*x1*x2**4 + x1*x2*x3**3*(-28*z**8 + 84*z**7 - 172*z**6 + 252*z**5 - 244*z**4 + 168*z**3 - 60*z**2)/(z**6 - 3*z**5 + 6*z**4 - 7*z**3 + 6*z**2 - 3*z + 1) - 8*x2**5 + x2**2*x3**3*(-14*z**4 + 28*z**3 - 14*z**2)/(z**2 - z + 1))/(12*z**2 - 12*z + 12), -x2*(-x2**5 + x2**2*x3**3*(-4*z**4 + 8*z**3 - 4*z**2)/(z**2 - z + 1)) + (z + 1)*(-x1**6 - 8*x1**5*x2 - x1**4*x3**2*z**2/(z**2 - z + 1) - 8*x1**3*x2*x3**2*z**2/(z**2 - z + 1) + x1**3*x3**3*(-28*z**6 + 83*z**5 - 111*z**4 + 85*z**3 - 29*z**2)/(2*z**4 - 4*z**3 + 6*z**2 - 4*z + 2) + x1**2*x2*x3**3*(-28*z**6 + 80*z**5 - 108*z**4 + 88*z**3 - 32*z**2)/(z**4 - 2*z**3 + 3*z**2 - 2*z + 1))/(z**2 - z + 1) + (9*x1**2*z + 9*x1**2 - 18*x1*x3*z - 4*x3**2*z**3 + 6*x3**2*z**2 + 6*x3**2*z - 4*x3**2)*(-x1**4*z**4/(z**4 - 2*z**3 + 3*z**2 - 2*z + 1) - 8*x1**3*x2*z**4/(z**4 - 2*z**3 + 3*z**2 - 2*z + 1) + x1**3*x3*(-14*z**8 + 41*z**7 - 55*z**6 + 43*z**5 - 15*z**4)/(z**6 - 3*z**5 + 6*z**4 - 7*z**3 + 6*z**2 - 3*z + 1) + x1**2*x2*x3*(-28*z**8 + 76*z**7 - 104*z**6 + 92*z**5 - 36*z**4)/(z**6 - 3*z**5 + 6*z**4 - 7*z**3 + 6*z**2 - 3*z + 1) + x1**2*x3**2*(-70*z**12 + 392*z**11 - 1079*z**10 + 1934*z**9 - 2435*z**8 + 2180*z**7 - 1357*z**6 + 534*z**5 - 99*z**4)/(4*z**8 - 16*z**7 + 40*z**6 - 64*z**5 + 76*z**4 - 64*z**3 + 40*z**2 - â€¦
>>> l.reduced((x1 + x2)**4)
([z*(-x1**2 - 4*x1*x2 - x3**2*z**2/(z**2 - z + 1))/(z**2 - z + 1) + (-x2 - 6*x3*z**2/(z**4 - 2*z**3 + 3*z**2 - 2*z + 1))*(-x2*z/3 - x2/3) + (z + 1)*(-4*x2*x3*z**2/(z**2 - z + 1) + x3**2*(-6*z**6 + 17*z**5 - 23*z**4 + 19*z**3 - 7*z**2)/(2*z**4 - 4*z**3 + 6*z**2 - 4*z + 2))/(2*z**2 - 2*z + 2) - (x1*(-6*z**2 + 5*z - 7)/(z**2 - z + 1) + x2*(-4*z**2 - 8)/(z**2 - z + 1))*(2*x1*z**3 + 2*x1 - 3*x3*z**3 + 6*x3*z**2 - 3*x3*z)/(6*z**2 - 6*z + 6) + (-6*z**8 + 11*z**7 - 10*z**6 + 8*z**4 - 7*z**3)*(6*x1**2*z + 3*x1**2 - 10*x1*x3*z + 2*x1*x3 + 3*x2**2*z - 3*x2**2 - 2*x3**2*z**3 + 8*x3**2*z**2 - 3*x3**2*z - z**2*(3*x1**2 - 2*x1*x3*z - 2*x1*x3 + x3**2*z) - 2*z*(3*x1**2 - 2*x1*x3*z - 2*x1*x3 + x3**2*z) - 6*z*(-x1**2*z - x1**2 + 2*x1*x3*z + x2**2))/((3*z**4 - 6*z**3 + 3*z**2)*(4*z**6 - 12*z**5 + 24*z**4 - 28*z**3 + 24*z**2 - 12*z + 4)), -x2*x3*(-18*z**6 + 47*z**5 - 69*z**4 + 57*z**3 - 25*z**2)/(2*(4*z**6 - 12*z**5 + 24*z**4 - 28*z**3 + 24*z**2 - 12*z + 4)) - x3**2*(-2*z**4 + 2*z**3 - 4*z**2)/(2*(z**2 - z + 1)) + (-x2 - 6*x3*z**2/(z**4 - 2*z**3 + 3*z**2 - 2*z + 1))*(-x1*z**2/3 + x1*z/3 - x1/3 + x3*z**2/6 + x3*z/6) - (x1*(-6*z**2 + 5*z - 7)/(z**2 - z + 1) + x2*(-4*z**2 - 8)/(z**2 - z + 1))*(4*x2*z**3 - 3*x2*z**2 - 3*x2*z + 4*x2)/(12*z**2 - 12*z + 12) - (-6*z**8 + 11*z**7 - 10*z**6 + 8*z**4 - 7*z**3)*(12*x1*x2*z**2 - 12*x1*x2*z + 12*x1*x2 - 8*x2*x3*z**3 + 6*x2*x3*z**2 + 6*x2*x3*z - 8*x2*x3)/((12*z**4 - 24*z**3 + 12*z**2)*(4*z**6 - 12*z**5 + 24*z**4 - 28*z**3 + 24*z**2 - 12*z + 4)), -x2*(-x2 - 6*x3*z**2/(z**4 - 2*z**3 + 3*z**2 - 2*z + 1)) + (z + 1)*(-x1**2 - 4*x1*x2 - x3**2*z**2/(z**2 - z + 1))/(z**2 - z + 1) - (x1*(-6*z**2 + 5*z - 7)/(z**2 - z + 1) + x2*(-4*z**2 - 8)/(z**2 - z + 1))*(6*x1*z**2 - 6*x1*z + 6*x1 - 4*x3*z**3 + 3*x3*z**2 + 3*x3*z - 4*x3)/(6*z**2 - 6*z + 6) + 3*(-4*x2*x3*z**2/(z**2 - z + 1) + x3**2*(-6*z**6 + 17*z**5 - 23*z**4 + 19*z**3 - 7*z**2)/(2*z**4 - 4*z**3 + 6*z**2 - 4*z + 2))/(2*z**2 - 2*z + 2) + (-6*z**8 + 11*z**7 - 10*z**6 + 8*z**4 - 7*z**3)*(9*x1**2*z + 9*x1**2 - 18*x1*x3*z - 4*x3**2*z**3 + 6*x3**2*z**2 + 6*x3**2*z - 4*x3**2)/((3*z**4 - 6*z**3 + 3*z**2)*(4*z**6 - 12*z**5 + 24*z**4 - 28*z**3 + 24*z**2 - 12*z + 4))], 0)
>>> l.reduced((x1 + x2)**6)[2]
[Could not import friendly_traceback. You can install it with Tools => Manage packages]

Traceback (most recent call last):
  File "<pyshell>", line 1, in <module>
IndexError: tuple index out of range
>>> l.reduced((x1 + x2)**6)[1]
0
>>> l.reduced((x1 + x2)**2)[1]
2*x1*x2 + x2**2*(z**2 + 2)/(z**2 - z + 1) + x3**2*z**2/(z**2 - z + 1)
>>> l.reduced((x1 + x2)**2)
([-z/(z**2 - z + 1), 0, -(z + 1)/(z**2 - z + 1)], 2*x1*x2 + x2**2*(z**2 + 2)/(z**2 - z + 1) + x3**2*z**2/(z**2 - z + 1))
>>> %Run GetPFO.py
>>> %Run GetPFO.py
0
>>> [1,2,3].deepcopy()
[Could not import friendly_traceback. You can install it with Tools => Manage packages]

Traceback (most recent call last):
  File "<pyshell>", line 1, in <module>
AttributeError: 'list' object has no attribute 'deepcopy'
>>> [1,2,3].copy()
[1, 2, 3]
>>> s = [1,2,3]
>>> t = s
>>> t == s
True
>>> t = s.copy()
>>> t == s
True
>>> s[1]
2
>>> t
[1, 2, 3]
>>> t[1] = 1
>>> s
[1, 2, 3]
>>> s == t
False
>>> %Run GetPFO.py
0
>>> l.list_reduced([1])
[1]
>>> l.list_reduced([x1])
[x1]
>>> l.list_reduced([x1**2])
[(x2**2*(z + 1) + x3**2*z**2)/(z**2 - z + 1)]
>>> l.list_reduced([1,x1**2])
[Could not import friendly_traceback. You can install it with Tools => Manage packages]

Traceback (most recent call last):
  File "<pyshell>", line 1, in <module>
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 87, in list_reduced
    outlst[deg - 2] += sum(rs[0][num].diff(self.varlist[num]) for num in range(len(num))) / sympy.Integer(1 - deg)
NameError: name 'num' is not defined
>>> %Run GetPFO.py
0
>>> l.list_reduced([1,x1**2])
[1, (x2**2*(z + 1) + x3**2*z**2)/(z**2 - z + 1)]
>>> l.list_reduced([1,x1])
[1, x1]
>>> l.list_reduced([1,x1**3])
[-3*z**2/(2*(2*z**4 - 4*z**3 + 6*z**2 - 4*z + 2)) + 3*z**2/((z**2 - z + 1)*(2*z**2 - 2*z + 2)) + z/(z**2 - z + 1) + (-z - 1)*(2*z**3 + 2)/((z**2 - z + 1)*(6*z**2 - 6*z + 6)) + (-z - 1)*(4*z**3 - 3*z**2 - 3*z + 4)/((z**2 - z + 1)*(12*z**2 - 12*z + 12)) + (-z - 1)*(-4*z**3 + 3*z**2 + 3*z - 4)/((z**2 - z + 1)*(6*z**2 - 6*z + 6)) + 1, x3**3*z**2*(z + 1)/(2*(z**2 - z + 1))]
>>> %Run GetPFO.py
0
>>> l.list_reduced([1,x1**3])
[(z**2 - z/4 + 1)/(z**2 - z + 1), x3**3*z**2*(z + 1)/(2*(z**2 - z + 1))]
>>> l.list_reduced([1,x1**4])
[(-2*x1*z**2 + 10*x1*z - 2*x1 + x3*z**2 + x3*z + 6*z**2 - 12*z + 6)/(6*z**2 - 12*z + 6), 0]
>>> l.list_reduced([1,x1**2])
[1, (x2**2*(z + 1) + x3**2*z**2)/(z**2 - z + 1)]
>>> l.list_reduced([1,x1**5])
[-(8*x1**2*z**8 - 49*x1**2*z**7 + 89*x1**2*z**6 - 263*x1**2*z**5 + 370*x1**2*z**4 - 263*x1**2*z**3 + 89*x1**2*z**2 - 49*x1**2*z + 8*x1**2 - 12*x1*x3*z**8 + 44*x1*x3*z**7 + 22*x1*x3*z**6 - 40*x1*x3*z**5 - 40*x1*x3*z**4 + 22*x1*x3*z**3 + 44*x1*x3*z**2 - 12*x1*x3*z + 12*x2**2*z**5 + 12*x2**2*z**2 + x3**2*z**8 - 13*x3**2*z**7 - x3**2*z**6 + 26*x3**2*z**5 - x3**2*z**4 - 13*x3**2*z**3 + x3**2*z**2 - 12*z**8 + 60*z**7 - 156*z**6 + 264*z**5 - 312*z**4 + 264*z**3 - 156*z**2 + 60*z - 12)/(12*z**8 - 60*z**7 + 156*z**6 - 264*z**5 + 312*z**4 - 264*z**3 + 156*z**2 - 60*z + 12), 0]
>>> s = z**5
>>> s.diff(z)
5*z**4
>>> %Run GetPFO.py
0
>>> l.t_derivative([1])
[Could not import friendly_traceback. You can install it with Tools => Manage packages]

Traceback (most recent call last):
  File "<pyshell>", line 1, in <module>
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 94, in t_derivative
    outlst[num] += inlst[num].diff(z)
AttributeError: 'int' object has no attribute 'diff'
>>> l.t_derivative([sympy.Integer(1)])
>>> %Run GetPFO.py
0
>>> l.t_derivative([sympy.Integer(1)])
[0, x1**2*x3 - x1*x3**2]
>>> [0,1,2][:-1]
[0, 1]
>>> %Run GetPFO.py
0
>>> l.t_derivative([sympy.Integer(1)])
[Could not import friendly_traceback. You can install it with Tools => Manage packages]

Traceback (most recent call last):
  File "<pyshell>", line 1, in <module>
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 98, in t_derivative
    return list_reduced(self, outlst)
NameError: name 'list_reduced' is not defined
>>> %Run GetPFO.py
0
>>> l.t_derivative([sympy.Integer(1)])
[Could not import friendly_traceback. You can install it with Tools => Manage packages]

Traceback (most recent call last):
  File "<pyshell>", line 1, in <module>
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 98, in t_derivative
    return self.list_reduced(self, outlst)
TypeError: list_reduced() takes 2 positional arguments but 3 were given
>>> %Run GetPFO.py
0
>>> l.t_derivative([sympy.Integer(1)])
[Could not import friendly_traceback. You can install it with Tools => Manage packages]

Traceback (most recent call last):
  File "<pyshell>", line 1, in <module>
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 98, in t_derivative
    return self.list_reduced(outlst)
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 84, in list_reduced
    rs = self.reduced(outlst[deg - 1])
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 78, in reduced
    outlst[varnum] += gbred[0][num] * self.gbinjac[num][varnum]
IndexError: list index out of range
>>> %Run GetPFO.py
0
>>> %Run GetPFO.py
0
[0, -z*(-x1**2*x3 + x1*x3**2)]
[Could not import friendly_traceback. You can install it with Tools => Manage packages]

Traceback (most recent call last):
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 105, in <module>
    print(l.t_derivative([sympy.Integer(1)]))
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 99, in t_derivative
    return self.list_reduced(outlst)
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 84, in list_reduced
    rs = self.reduced(outlst[deg - 1])
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 78, in reduced
    outlst[varnum] += gbred[0][num] * self.gbinjac[num][varnum]
IndexError: list index out of range
>>> %Run GetPFO.py
0
>>> l.list_reduced([0, -z*(-x1**2*x3 + x1*x3**2)])
[Could not import friendly_traceback. You can install it with Tools => Manage packages]

Traceback (most recent call last):
  File "<pyshell>", line 1, in <module>
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 84, in list_reduced
    rs = self.reduced(outlst[deg - 1])
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 78, in reduced
    outlst[varnum] += gbred[0][num] * self.gbinjac[num][varnum]
IndexError: list index out of range
>>> %Run GetPFO.py
(x1 + x2)**2
0
0
[Could not import friendly_traceback. You can install it with Tools => Manage packages]

Traceback (most recent call last):
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 105, in <module>
    print(l.t_derivative([sympy.Integer(1)]))
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 99, in t_derivative
    return self.list_reduced(outlst)
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 85, in list_reduced
    rs = self.reduced(outlst[deg - 1])
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 79, in reduced
    outlst[varnum] += gbred[0][num] * self.gbinjac[num][varnum]
IndexError: list index out of range
>>> %Run GetPFO.py
0
[z*(2*z - 1)/(4*(z**2 - z + 1)), x3**3*z**2*(z - 1)/(2*(z**2 - z + 1))]
>>> %Run GetPFO.py
0
0
[z*(2*z - 1)/(4*(z**2 - z + 1)), x3**3*z**2*(z - 1)/(2*(z**2 - z + 1))]
>>> %Run GetPFO.py
(x1 + x2)**2
0
0
-z*(-x1**2*x3 + x1*x3**2)
[z*(2*z - 1)/(4*(z**2 - z + 1)), x3**3*z**2*(z - 1)/(2*(z**2 - z + 1))]
>>> %Run GetPFO.py
(x1 + x2)**2
0
0
-z*(-x1**2*x3 + x1*x3**2)
[z*(2*z - 1)/(4*(z**2 - z + 1)), x3**3*z**2*(z - 1)/(2*(z**2 - z + 1))]
0
-z*(-x1**2*x3 + x1*x3**2)
[z*(2*z - 1)/(4*(z**2 - z + 1)), x3**3*z**2*(z - 1)/(2*(z**2 - z + 1))]
>>> %Run GetPFO.py
(x1 + x2)**2
0
0
-z*(-x1**2*x3 + x1*x3**2)
[z*(2*z - 1)/(4*(z**2 - z + 1)), x3**3*z**2*(z - 1)/(2*(z**2 - z + 1))]
0
-z*(-x1**2*x3 + x1*x3**2)
z*(z*(1 - 2*z)*(2*z - 1)/(4*(z**2 - z + 1)**2) + z/(2*(z**2 - z + 1)) + (2*z - 1)/(4*(z**2 - z + 1)))
-z**2*(2*z - 1)*(-x1**2*x3 + x1*x3**2)/(4*(z**2 - z + 1)) + z*(x3**3*z**2*(1 - 2*z)*(z - 1)/(2*(z**2 - z + 1)**2) + x3**3*z**2/(2*(z**2 - z + 1)) + x3**3*z*(z - 1)/(z**2 - z + 1))
-x3**3*z**3*(z - 1)*(-x1**2*x3 + x1*x3**2)/(z**2 - z + 1)
[z*(4*z**3 - 8*z**2 + 17*z - 4)/(16*(z**4 - 2*z**3 + 3*z**2 - 2*z + 1)), z*(12*x1**3*z**4 - 12*x1**3*z**3 + 12*x1**3*z**2 - 18*x1**2*x3*z**4 + 28*x1**2*x3*z**3 - 36*x1**2*x3*z**2 + 18*x1**2*x3*z - 8*x1**2*x3 - 8*x1*x2**2*z**3 - 8*x1*x2**2 + 10*x1*x3**2*z**4 - 24*x1*x3**2*z**3 + 32*x1*x3**2*z**2 - 22*x1*x3**2*z + 8*x1*x3**2 + 4*x2**2*x3*z**3 + 4*x2**2*x3 + 10*x3**3*z**5 - 29*x3**3*z**4 + 44*x3**3*z**3 - 37*x3**3*z**2 + 12*x3**3*z)/(8*(z**5 - 3*z**4 + 5*z**3 - 5*z**2 + 3*z - 1)), 0]
>>> s = z*(12*x1**3*z**4 - 12*x1**3*z**3 + 12*x1**3*z**2 - 18*x1**2*x3*z**4 + 28*x1**2*x3*z**3 - 36*x1**2*x3*z**2 + 18*x1**2*x3*z - 8*x1**2*x3 - 8*x1*x2**2*z**3 - 8*x1*x2**2 + 10*x1*x3**2*z**4 - 24*x1*x3**2*z**3 + 32*x1*x3**2*z**2 - 22*x1*x3**2*z + 8*x1*x3**2 + 4*x2**2*x3*z**3 + 4*x2**2*x3 + 10*x3**3*z**5 - 29*x3**3*z**4 + 44*x3**3*z**3 - 37*x3**3*z**2 + 12*x3**3*z)/(8*(z**5 - 3*z**4 + 5*z**3 - 5*z**2 + 3*z - 1))
>>> sympy.simplify(s)
z*(12*x1**3*z**4 - 12*x1**3*z**3 + 12*x1**3*z**2 - 18*x1**2*x3*z**4 + 28*x1**2*x3*z**3 - 36*x1**2*x3*z**2 + 18*x1**2*x3*z - 8*x1**2*x3 - 8*x1*x2**2*z**3 - 8*x1*x2**2 + 10*x1*x3**2*z**4 - 24*x1*x3**2*z**3 + 32*x1*x3**2*z**2 - 22*x1*x3**2*z + 8*x1*x3**2 + 4*x2**2*x3*z**3 + 4*x2**2*x3 + 10*x3**3*z**5 - 29*x3**3*z**4 + 44*x3**3*z**3 - 37*x3**3*z**2 + 12*x3**3*z)/(8*(z**5 - 3*z**4 + 5*z**3 - 5*z**2 + 3*z - 1))
>>> l.reduced(s)
z*(12*x1**3*z**4 - 12*x1**3*z**3 + 12*x1**3*z**2 - 18*x1**2*x3*z**4 + 28*x1**2*x3*z**3 - 36*x1**2*x3*z**2 + 18*x1**2*x3*z - 8*x1**2*x3 - 8*x1*x2**2*z**3 - 8*x1*x2**2 + 10*x1*x3**2*z**4 - 24*x1*x3**2*z**3 + 32*x1*x3**2*z**2 - 22*x1*x3**2*z + 8*x1*x3**2 + 4*x2**2*x3*z**3 + 4*x2**2*x3 + 10*x3**3*z**5 - 29*x3**3*z**4 + 44*x3**3*z**3 - 37*x3**3*z**2 + 12*x3**3*z)/(8*z**5 - 24*z**4 + 40*z**3 - 40*z**2 + 24*z - 8)
([x3*(z + 1)*(-11*z**5 + 12*z**4 - 16*z**3 + 11*z**2 - 4*z)/((2*z**2 - 2*z + 2)*(4*z**5 - 12*z**4 + 20*z**3 - 20*z**2 + 12*z - 4)) + z*(-3*x1*z**3/(2*z**3 - 4*z**2 + 4*z - 2) + x3*(9*z**3 - 5*z**2 + 4*z)/(4*z**3 - 8*z**2 + 8*z - 4))/(z**2 - z + 1) - (-z**4 - 3*z**3 + 2*z)*(2*x1*z**3 + 2*x1 - 3*x3*z**3 + 6*x3*z**2 - 3*x3*z)/((6*z**2 - 6*z + 6)*(2*z**5 - 6*z**4 + 10*z**3 - 10*z**2 + 6*z - 2)), -x2*(14*z**5 - 25*z**4 + 15*z**3 - 19*z**2 + 8*z)/(2*(8*z**6 - 24*z**5 + 48*z**4 - 56*z**3 + 48*z**2 - 24*z + 8)) - (-z**4 - 3*z**3 + 2*z)*(4*x2*z**3 - 3*x2*z**2 - 3*x2*z + 4*x2)/((12*z**2 - 12*z + 12)*(2*z**5 - 6*z**4 + 10*z**3 - 10*z**2 + 6*z - 2)), 3*x3*(-11*z**5 + 12*z**4 - 16*z**3 + 11*z**2 - 4*z)/((2*z**2 - 2*z + 2)*(4*z**5 - 12*z**4 + 20*z**3 - 20*z**2 + 12*z - 4)) + (z + 1)*(-3*x1*z**3/(2*z**3 - 4*z**2 + 4*z - 2) + x3*(9*z**3 - 5*z**2 + 4*z)/(4*z**3 - 8*z**2 + 8*z - 4))/(z**2 - z + 1) - (-z**4 - 3*z**3 + 2*z)*(6*x1*z**2 - 6*x1*z + 6*x1 - 4*x3*z**3 + 3*x3*z**2 + 3*x3*z - 4*x3)/((6*z**2 - 6*z + 6)*(2*z**5 - 6*z**4 + 10*z**3 - 10*z**2 + 6*z - 2))], x3**3*(3*z**5 - 5*z**4 + 9*z**3 - 4*z**2)/(2*z**4 - 4*z**3 + 6*z**2 - 4*z + 2))
>>> %Run GetPFO.py
(x1 + x2)**2
0
0
-z*(-x1**2*x3 + x1*x3**2)
[-z**2/(2*z**2 - 2*z + 2) + z**2/(z**2 - z + 1) - 5*z/(2*(2*z**2 - 2*z + 2)) + z/(z**2 - z + 1), x3**3*z**3/(2*z**2 - 2*z + 2) - x3**3*z**2/(2*z**2 - 2*z + 2)]
0
-z*(-x1**2*x3 + x1*x3**2)
z*(z**2*(1 - 2*z)/(z**2 - z + 1)**2 - z**2*(2 - 4*z)/(2*z**2 - 2*z + 2)**2 + z*(1 - 2*z)/(z**2 - z + 1)**2 - 5*z*(2 - 4*z)/(2*(2*z**2 - 2*z + 2)**2) - 2*z/(2*z**2 - 2*z + 2) + 2*z/(z**2 - z + 1) - 5/(2*(2*z**2 - 2*z + 2)) + 1/(z**2 - z + 1))
-z*(-x1**2*x3 + x1*x3**2)*(-z**2/(2*z**2 - 2*z + 2) + z**2/(z**2 - z + 1) - 5*z/(2*(2*z**2 - 2*z + 2)) + z/(z**2 - z + 1)) + z*(x3**3*z**3*(2 - 4*z)/(2*z**2 - 2*z + 2)**2 - x3**3*z**2*(2 - 4*z)/(2*z**2 - 2*z + 2)**2 + 3*x3**3*z**2/(2*z**2 - 2*z + 2) - 2*x3**3*z/(2*z**2 - 2*z + 2))
-2*z*(-x1**2*x3 + x1*x3**2)*(x3**3*z**3/(2*z**2 - 2*z + 2) - x3**3*z**2/(2*z**2 - 2*z + 2))

>>> %Run GetPFO.py
(x1 + x2)**2
0
0
-z*(-x1**2*x3 + x1*x3**2)
[z*(2*z - 1)/(4*(z**2 - z + 1)), x3**3*z**2*(z - 1)/(2*(z**2 - z + 1))]
0
-z*(-x1**2*x3 + x1*x3**2)
z*(z*(1 - 2*z)*(2*z - 1)/(4*(z**2 - z + 1)**2) + z/(2*(z**2 - z + 1)) + (2*z - 1)/(4*(z**2 - z + 1)))
-z**2*(2*z - 1)*(-x1**2*x3 + x1*x3**2)/(4*(z**2 - z + 1)) + z*(x3**3*z**2*(1 - 2*z)*(z - 1)/(2*(z**2 - z + 1)**2) + x3**3*z**2/(2*(z**2 - z + 1)) + x3**3*z*(z - 1)/(z**2 - z + 1))
-x3**3*z**3*(z - 1)*(-x1**2*x3 + x1*x3**2)/(z**2 - z + 1)
[z*(4*z**3 - 8*z**2 + 17*z - 4)/(16*(z**4 - 2*z**3 + 3*z**2 - 2*z + 1)), z*(12*x1**3*z**4 - 12*x1**3*z**3 + 12*x1**3*z**2 - 18*x1**2*x3*z**4 + 28*x1**2*x3*z**3 - 36*x1**2*x3*z**2 + 18*x1**2*x3*z - 8*x1**2*x3 - 8*x1*x2**2*z**3 - 8*x1*x2**2 + 10*x1*x3**2*z**4 - 24*x1*x3**2*z**3 + 32*x1*x3**2*z**2 - 22*x1*x3**2*z + 8*x1*x3**2 + 4*x2**2*x3*z**3 + 4*x2**2*x3 + 10*x3**3*z**5 - 29*x3**3*z**4 + 44*x3**3*z**3 - 37*x3**3*z**2 + 12*x3**3*z)/(8*(z**5 - 3*z**4 + 5*z**3 - 5*z**2 + 3*z - 1)), 0]
>>> %Run GetPFO.py
0
[z*(2*z - 1)/(4*(z**2 - z + 1)), x3**3*z**2*(z - 1)/(2*(z**2 - z + 1))]
[z*(4*z**3 - 8*z**2 + 17*z - 4)/(16*(z**4 - 2*z**3 + 3*z**2 - 2*z + 1)), z*(12*x1**3*z**4 - 12*x1**3*z**3 + 12*x1**3*z**2 - 18*x1**2*x3*z**4 + 28*x1**2*x3*z**3 - 36*x1**2*x3*z**2 + 18*x1**2*x3*z - 8*x1**2*x3 - 8*x1*x2**2*z**3 - 8*x1*x2**2 + 10*x1*x3**2*z**4 - 24*x1*x3**2*z**3 + 32*x1*x3**2*z**2 - 22*x1*x3**2*z + 8*x1*x3**2 + 4*x2**2*x3*z**3 + 4*x2**2*x3 + 10*x3**3*z**5 - 29*x3**3*z**4 + 44*x3**3*z**3 - 37*x3**3*z**2 + 12*x3**3*z)/(8*(z**5 - 3*z**4 + 5*z**3 - 5*z**2 + 3*z - 1)), 0]
>>> %Run GetPFO.py
0
[0, -z*(-x1**2*x3 + x1*x3**2)]
[0, z*(x1**2*x3 - x1*x3**2), 2*z**2*(-x1**2*x3 + x1*x3**2)**2]
>>> l.list_reduced([0, -z*(-x1**2*x3 + x1*x3**2)])
[z*(2*z - 1)/(4*(z**2 - z + 1)), x3**3*z**2*(z - 1)/(2*(z**2 - z + 1))]
>>> l.list_reduced([0, z*(x1**2*x3 - x1*x3**2), 2*z**2*(-x1**2*x3 + x1*x3**2)**2])
[z*(2*z - 1)/(4*(z**2 - z + 1)), (15*x1**3*z**6 - 18*x1**3*z**5 + 12*x1**3*z**4 - 6*x1**3*z**3 + 9*x1**3*z**2 - 6*x1**3*z + 6*x1**3 + 2*x1**2*x3*z**7 - 37*x1**2*x3*z**6 + 38*x1**2*x3*z**5 - 12*x1**2*x3*z**4 + 11*x1**2*x3*z**3 - 13*x1**2*x3*z**2 - 5*x1**2*x3*z - 8*x1*x2**2*z**5 + 4*x1*x2**2*z**4 - 4*x1*x2**2*z**3 - 8*x1*x2**2*z**2 + 4*x1*x2**2*z - 4*x1*x2**2 + x1*x3**2*z**7 + 30*x1*x3**2*z**6 - 48*x1*x3**2*z**5 + 22*x1*x3**2*z**4 - 19*x1*x3**2*z**3 + 22*x1*x3**2*z**2 - 4*x1*x3**2*z - x2**2*x3*z**6 + 4*x2**2*x3*z**5 + 2*x2**2*x3*z**4 + 3*x2**2*x3*z**2 - 3*x3**3*z**7 - 4*x3**3*z**6 + 15*x3**3*z**5 - 7*x3**3*z**4 - x3**3*z**2)/(2*(z**6 - 4*z**5 + 8*z**4 - 10*z**3 + 8*z**2 - 4*z + 1)), 0]
>>> l.list_reduced(l.list_reduced([0, z*(x1**2*x3 - x1*x3**2), 2*z**2*(-x1**2*x3 + x1*x3**2)**2]))
[Could not import friendly_traceback. You can install it with Tools => Manage packages]

Traceback (most recent call last):
  File "<pyshell>", line 1, in <module>
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 89, in list_reduced
    outlst[deg - 2] += sum(rs[0][num].diff(self.varlist[num]) for num in range(len(self.varlist))) / sympy.Integer(1 - deg)
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 89, in <genexpr>
    outlst[deg - 2] += sum(rs[0][num].diff(self.varlist[num]) for num in range(len(self.varlist))) / sympy.Integer(1 - deg)
AttributeError: 'int' object has no attribute 'diff'
>>> diff(z, z)
[Could not import friendly_traceback. You can install it with Tools => Manage packages]

Traceback (most recent call last):
  File "<pyshell>", line 1, in <module>
NameError: name 'diff' is not defined
>>> sympy.diff(z, z)
1
>>> sympy.diff(2, z)
0
>>> sympy.diff(z**5, z)
5*z**4
>>> %Run GetPFO.py
0
[0, -z*(-x1**2*x3 + x1*x3**2)]
[0, z*(x1**2*x3 - x1*x3**2), 2*z**2*(-x1**2*x3 + x1*x3**2)**2]
>>> l.list_reduced(l.list_reduced([0, z*(x1**2*x3 - x1*x3**2), 2*z**2*(-x1**2*x3 + x1*x3**2)**2]))
[z*(5*z - 1)/(4*(z**2 - z + 1)), x3**3*z**2*(3*z/2 - 1)/(z**2 - z + 1), 0]
>>> %Run GetPFO.py
0
[0, -z*(-x1**2*x3 + x1*x3**2)]
[0, z*(x1**2*x3 - x1*x3**2), 2*z**2*(-x1**2*x3 + x1*x3**2)**2]
>>> l.list_reduced(l.list_reduced([0, z*(x1**2*x3 - x1*x3**2), 2*z**2*(-x1**2*x3 + x1*x3**2)**2]))
[z*(5*z - 1)/(4*(z**2 - z + 1)), x3**3*z**2*(3*z/2 - 1)/(z**2 - z + 1), 0]
>>> l.list_reduced([0, z*(x1**2*x3 - x1*x3**2), 2*z**2*(-x1**2*x3 + x1*x3**2)**2])
[z*(2*z - 1)/(4*(z**2 - z + 1)), (15*x1**3*z**6 - 18*x1**3*z**5 + 12*x1**3*z**4 - 6*x1**3*z**3 + 9*x1**3*z**2 - 6*x1**3*z + 6*x1**3 + 2*x1**2*x3*z**7 - 37*x1**2*x3*z**6 + 38*x1**2*x3*z**5 - 12*x1**2*x3*z**4 + 11*x1**2*x3*z**3 - 13*x1**2*x3*z**2 - 5*x1**2*x3*z - 8*x1*x2**2*z**5 + 4*x1*x2**2*z**4 - 4*x1*x2**2*z**3 - 8*x1*x2**2*z**2 + 4*x1*x2**2*z - 4*x1*x2**2 + x1*x3**2*z**7 + 30*x1*x3**2*z**6 - 48*x1*x3**2*z**5 + 22*x1*x3**2*z**4 - 19*x1*x3**2*z**3 + 22*x1*x3**2*z**2 - 4*x1*x3**2*z - x2**2*x3*z**6 + 4*x2**2*x3*z**5 + 2*x2**2*x3*z**4 + 3*x2**2*x3*z**2 - 3*x3**3*z**7 - 4*x3**3*z**6 + 15*x3**3*z**5 - 7*x3**3*z**4 - x3**3*z**2)/(2*(z**6 - 4*z**5 + 8*z**4 - 10*z**3 + 8*z**2 - 4*z + 1)), 0]
>>> %Run GetPFO.py
0
[0, -z*(-x1**2*x3 + x1*x3**2)]
[0, z*(x1**2*x3 - x1*x3**2), 2*z**2*(-x1**2*x3 + x1*x3**2)**2]
>>> l.list_reduced([0, z*(x1**2*x3 - x1*x3**2), 2*z**2*(-x1**2*x3 + x1*x3**2)**2])
[z*(5*z - 1)/(4*(z**2 - z + 1)), x3**3*z**2*(3*z/2 - 1)/(z**2 - z + 1), 0]
>>> l.t_derivative([z*(5*z - 1)/(4*(z**2 - z + 1)), x3**3*z**2*(3*z/2 - 1)/(z**2 - z + 1), 0])
[z*(z*(4 - 8*z)*(5*z - 1)/(4*z**2 - 4*z + 4)**2 + 5*z/(4*z**2 - 4*z + 4) + (5*z - 1)/(4*z**2 - 4*z + 4)), -z**2*(5*z - 1)*(-x1**2*x3 + x1*x3**2)/(4*z**2 - 4*z + 4) + z*(x3**3*z**2*(1 - 2*z)*(3*z/2 - 1)/(z**2 - z + 1)**2 + 3*x3**3*z**2/(2*(z**2 - z + 1)) + 2*x3**3*z*(3*z/2 - 1)/(z**2 - z + 1)), -2*x3**3*z**3*(3*z/2 - 1)*(-x1**2*x3 + x1*x3**2)/(z**2 - z + 1)]
>>> %Run GetPFO.py
0
[0, -z*(-x1**2*x3 + x1*x3**2)]
[0, z*(x1**2*x3 - x1*x3**2), 2*z**2*(-x1**2*x3 + x1*x3**2)**2]
>>> l.list_reduced([0, z*(x1**2*x3 - x1*x3**2), 2*z**2*(-x1**2*x3 + x1*x3**2)**2])
[z*(5*z - 1)/(4*(z**2 - z + 1)), x3**3*z**2*(3*z/2 - 1)/(z**2 - z + 1)]
>>> l.list_reduced([0, -z*(-x1**2*x3 + x1*x3**2)])
[z*(2*z - 1)/(4*(z**2 - z + 1)), x3**3*z**2*(z - 1)/(2*(z**2 - z + 1))]
>>> PFO(LEG).primtform
[Could not import friendly_traceback. You can install it with Tools => Manage packages]

Traceback (most recent call last):
  File "<pyshell>", line 1, in <module>
NameError: name 'PFO' is not defined
>>> PFTool.PFO(LEG).primtform
[Could not import friendly_traceback. You can install it with Tools => Manage packages]

Traceback (most recent call last):
  File "<pyshell>", line 1, in <module>
NameError: name 'LEG' is not defined
>>> PFTool.PFO(PFTool.LEG).primtform
t**2*z - t**2 + t*z + z/4
>>> %Run GetPFO.py
0
[0, -z*(-x1**2*x3 + x1*x3**2)]
[0, z*(x1**2*x3 - x1*x3**2), 2*z**2*(-x1**2*x3 + x1*x3**2)**2]
>>> %Run GetPFO.py
0
[z*(2*z - 1)/(4*(z**2 - z + 1)), x3**3*z**2*(z - 1)/(2*(z**2 - z + 1))]
[z*(z**3 - 2*z**2 + 8*z - 1)/(4*(z**4 - 2*z**3 + 3*z**2 - 2*z + 1)), x3**3*z**2*(3*z**3 - 5*z**2 + 9*z - 4)/(2*(z**4 - 2*z**3 + 3*z**2 - 2*z + 1))]
>>> sympy.cancel(x3**3*z**2*(3*z**3 - 5*z**2 + 9*z - 4)/(2*(z**4 - 2*z**3 + 3*z**2 - 2*z + 1)))
(3*x3**3*z**5 - 5*x3**3*z**4 + 9*x3**3*z**3 - 4*x3**3*z**2)/(2*z**4 - 4*z**3 + 6*z**2 - 4*z + 2)
>>> sympy.simplify(x3**3*z**2*(3*z**3 - 5*z**2 + 9*z - 4)/(2*(z**4 - 2*z**3 + 3*z**2 - 2*z + 1)))
x3**3*z**2*(3*z**3 - 5*z**2 + 9*z - 4)/(2*(z**4 - 2*z**3 + 3*z**2 - 2*z + 1))
>>> sympy.factor(x3**3*z**2*(3*z**3 - 5*z**2 + 9*z - 4)/(2*(z**4 - 2*z**3 + 3*z**2 - 2*z + 1)))
x3**3*z**2*(3*z**3 - 5*z**2 + 9*z - 4)/(2*(z**2 - z + 1)**2)
>>> l.list_reduced([z*(z**3 - 2*z**2 + 8*z - 1)/(4*(z**4 - 2*z**3 + 3*z**2 - 2*z + 1)), x3**3*z**2*(3*z**3 - 5*z**2 + 9*z - 4)/(2*(z**4 - 2*z**3 + 3*z**2 - 2*z + 1))])
[z*(z**3 - 2*z**2 + 8*z - 1)/(4*(z**4 - 2*z**3 + 3*z**2 - 2*z + 1)), x3**3*z**2*(3*z**3 - 5*z**2 + 9*z - 4)/(2*(z**4 - 2*z**3 + 3*z**2 - 2*z + 1))]
>>> %Run GetPFO.py
0
[0, -z*(-x1**2*x3 + x1*x3**2)]
[0, z*(x1**2*x3 - x1*x3**2), 2*z**2*(-x1**2*x3 + x1*x3**2)**2]
>>> l.list_reduced([0, z*(x1**2*x3 - x1*x3**2), 2*z**2*(-x1**2*x3 + x1*x3**2)**2])
[z*(5*z - 1)/(4*(z**2 - z + 1)), x3**3*z**2*(3*z/2 - 1)/(z**2 - z + 1)]
>>> %Run GetPFO.py
0
[0, -z*(-x1**2*x3 + x1*x3**2)]
[0, z*(x1**2*x3 - x1*x3**2), 2*z**2*(-x1**2*x3 + x1*x3**2)**2]
>>> l.list_reduced([0, z*(x1**2*x3 - x1*x3**2), 2*z**2*(-x1**2*x3 + x1*x3**2)**2])
[z*(z + 1)/(4*(z**2 - z + 1)), -x3**3*z**3/(2*z**2 - 2*z + 2)]
>>> %Run GetPFO.py
0
[z*(1 - 2*z)/(4*(z**2 - z + 1)), x3**3*z**2*(z - 1)/(2*(z**2 - z + 1))]
[z*(z + 1)/(4*(z**2 - z + 1)), -x3**3*z**3/(2*z**2 - 2*z + 2)]
>>> %Run GetPFO.py
0
[z*(1 - 2*z)/(4*(z**2 - z + 1)), x3**3*z**2*(z - 1)/(2*(z**2 - z + 1))]
[z*(z + 1)/(4*(z**2 - z + 1)), -x3**3*z**3/(2*z**2 - 2*z + 2)]
>>> %Run GetPFO.py
0
[z*(1 - 2*z)/(4*(z**2 - z + 1)), x3**3*z**2*(z - 1)/(2*(z**2 - z + 1))]
[z*(z + 1)/(4*(z**2 - z + 1)), -x3**3*z**3/(2*z**2 - 2*z + 2)]
>>> %Run GetPFO.py
[-1, 4*x4**4]
[1, -24*x4**4, 32*x4**8]
>>> %Run GetPFO.py
[-1, 4*x4**4]
[1, -24*x4**4, 32*x4**8]
[-(z**4 + 1280)/(z**4 - 256), x4**4*(60*z**4 + 20480)/(z**4 - 256), -96*x4**8*(z**4 + 256)/(z**4 - 256)]
[(z**8 + 11776*z**4 + 851968)/(z**8 - 512*z**4 + 65536), -x4**4*(112*z**8 + 280576*z**4 + 12582912)/(z**8 - 512*z**4 + 65536), x4**8*(192*z**8 + 385024*z**4 + 14680064)/(z**8 - 512*z**4 + 65536)]
>>> %Run GetPFO.py
[-1, 4*x4**4]
[1, -24*x4**4, 32*x4**8]
[-(z**4 + 1280)/(z**4 - 256), x4**4*(60*z**4 + 20480)/(z**4 - 256), -96*x4**8*(z**4 + 256)/(z**4 - 256)]
>>> %Run GetPFO.py
[-1, 5*x5**5]
[1, -35*x5**5, 50*x5**10]
[-1, 215*x5**5, -900*x5**10, 750*x5**15]
[(z**5 - 71875)/(z**5 + 3125), x5**5*(5328125 - 670*z**5)/(z**5 + 3125), x5**10*(3300*z**5 - 18593750)/(z**5 + 3125), x5**15*(14062500 - 3000*z**5)/(z**5 + 3125)]
>>> %Run GetPFO.py
[0, 5*x5**5*z]
[0, -25*x5**5*z, 50*x5**10*z]
[0, 125*x5**5*z, -750*x5**10*z, 750*x5**15*z]
[24*z/(z**5 - 1), -2375*x5**5*z/(z**5 - 1), 9250*x5**10*z/(z**5 - 1), -7500*x5**15*z/(z**5 - 1)]
>>> %Run GetPFO.py
[-1, 5*x5**5]
[1, -35*x5**5, 50*x5**10]
[-1, 215*x5**5, -900*x5**10, 750*x5**15]
[(z**5 + 23)/(z**5 - 1), -x5**5*(670*z**5 + 1705)/(z**5 - 1), x5**10*(3300*z**5 + 5950)/(z**5 - 1), -x5**15*(3000*z**5 + 4500)/(z**5 - 1)]
>>> %Run GetPFO.py
[1, 5*x5**5]
[1, 35*x5**5, 50*x5**10]
[1, 215*x5**5, 900*x5**10, 750*x5**15]
[(z**5 + 23)/(z**5 - 1), x5**5*(670*z**5 + 1705)/(z**5 - 1), x5**10*(3300*z**5 + 5950)/(z**5 - 1), x5**15*(3000*z**5 + 4500)/(z**5 - 1)]
>>> %Run GetPFO.py
[1, 5*x5**5]
[1, 35*x5**5, 50*x5**10]
[1, 215*x5**5, 900*x5**10, 750*x5**15]
[(z**5 + 23)/(z**5 - 1), x5**5*(670*z**5 + 1705)/(z**5 - 1), x5**10*(3300*z**5 + 5950)/(z**5 - 1), x5**15*(3000*z**5 + 4500)/(z**5 - 1)]
>>> %Run GetPFO.py
[-1, 5*x5**5]
[1, -35*x5**5, 50*x5**10]
[-1, 215*x5**5, -900*x5**10, 750*x5**15]
[(z**5 + 23)/(z**5 - 1), -x5**5*(670*z**5 + 1705)/(z**5 - 1), x5**10*(3300*z**5 + 5950)/(z**5 - 1), -x5**15*(3000*z**5 + 4500)/(z**5 - 1)]
>>> %Run GetPFO.py
[1, 5*x5**5]
[1, 35*x5**5, 50*x5**10]
[1, 215*x5**5, 900*x5**10, 750*x5**15]
[(z**5 + 23)/(z**5 - 1), x5**5*(670*z**5 + 1705)/(z**5 - 1), x5**10*(3300*z**5 + 5950)/(z**5 - 1), x5**15*(3000*z**5 + 4500)/(z**5 - 1)]
>>> %Run GetPFO.py
[1, 5*x5**5]
[1, 35*x5**5, 50*x5**10]
[1, 215*x5**5, 900*x5**10, 750*x5**15]
[(z**5 + 23)/(z**5 - 1), x5**5*(670*z**5 + 1705)/(z**5 - 1), x5**10*(3300*z**5 + 5950)/(z**5 - 1), x5**15*(3000*z**5 + 4500)/(z**5 - 1)]
>>> HP(x1**2 + x2**2 + x3**2).reduce(x1)
[Could not import friendly_traceback. You can install it with Tools => Manage packages]

Traceback (most recent call last):
  File "<pyshell>", line 1, in <module>
AttributeError: 'HP' object has no attribute 'reduce'
>>> HP(x1**2 + x2**2 + x3**2).reduce(x1)
[Could not import friendly_traceback. You can install it with Tools => Manage packages]

Traceback (most recent call last):
  File "<pyshell>", line 1, in <module>
AttributeError: 'HP' object has no attribute 'reduce'
>>> HP(x1**2 + x2**2 + x3**2).reduced(x1)
([1/2, 0, 0], 0)
>>> HP(x1**2 + x2**2 + x3**2).reduced(x1 ** 2)
([x1/2, 0, 0], 0)
>>> HP(x1**2 + x2**2 + x3**2).reduced(x1 ** 2 + 1)
([x1/2, 0, 0], 1)
>>> HP(x1**2 + x2**2 + x3**2).list_reduced([x1 ** 2 + 1])
[1]
>>> HP(x1**2 + x2**2 + x3**2).list_reduced([x1 + 1])
[1]
>>> HP(x1**3 + x2**3 + x3**3).list_reduced([x1 + 1])
[x1 + 1]
>>> HP(x1**3 + x2**3 + x3**3).list_reduced([x1**2 + 1])
[1]
>>> HP(x1**3 + x2**3 + x3**3).list_reduced([(x1+x2+1)**2 + 1])
[2*x1*x2 + 2*x1 + 2*x2 + 2]
>>> HP(x1**3 + x2**3 + x3**3).list_reduced([0, (x1+x2+1)**2])
[Could not import friendly_traceback. You can install it with Tools => Manage packages]

Traceback (most recent call last):
  File "<pyshell>", line 1, in <module>
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 87, in list_reduced
    rs = self.reduced(outlst[deg - 1])
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 80, in reduced
    outlst[varnum] += gbred[0][num] * self.gbinjac[num][varnum]
IndexError: list index out of range
>>> %Run GetPFO.py
5*x1*x2*x3*x4*x5*z
1
[1, 5*x5**5]
50*x1*x2*x3*x4*x5**6*z
5*x1*x2*x3*x4*x5*z + 5*x3**5 + 25*x5**5
1
[1, 35*x5**5, 50*x5**10]
750*x1*x2*x3*x4*x5**11*z
100*x1*x2**6*x3*x4*x5*z + 50*x2**5*x3**5 + 250*x4**5*x5**5 + 500*x5**10
5*x1*x2*x3*x4*x5*z + 10*x3**5 + 200*x5**5
1
[1, 215*x5**5, 900*x5**10, 750*x5**15]
15000*x1*x2*x3*x4*x5**16*z
750*x2*x3*x4*z*(4*x1**3*x2**2*x3**2*x4**2*x5**3*z**2 + 3*x1**2*x2*x3*x4**6*x5**2*z**6 - 8*x1**2*x2*x3*x4*x5**7*z**6 + 8*x1**2*x2*x3*x4*x5**7*z + 2*x1*x3**5*x4**5*x5*z**5 + 6*x1*x5**11*z**5 - 6*x1*x5**11 + x2**4*x3**4*x4**4*z**4)/(z**5 - 1)
50*(12*x1**2*x2**2*x3**2*x4**2*x5**2*z**2 + 12*x1*x2**6*x3*x4*x5*z**6 - 12*x1*x2**6*x3*x4*x5*z - 10*x1*x2*x3**6*x4*x5*z**6 + 24*x1*x2*x3**6*x4*x5*z + x1*x2*x3*x4*x5**6*z**6 - x1*x2*x3*x4*x5**6*z + 6*x2**5*x3**5*z**5 - 6*x2**5*x3**5 - 18*x3**5*x4**5*z**5 + 72*x3**5*x4**5 + 35*x4**5*x5**5*z**5 - 30*x4**5*x5**5 + 40*x5**10*z**5 + 60*x5**10)/(z**5 - 1)
5*(x1*x2*x3*x4*x5*z**6 + 23*x1*x2*x3*x4*x5*z + 3*x3**5*z**5 + 23*x3**5 + 130*x5**5*z**5 + 295*x5**5)/(z**5 - 1)
(z**5 + 23)/(z**5 - 1)
[(z**5 + 23)/(z**5 - 1), x5**5*(670*z**5 + 1705)/(z**5 - 1), x5**10*(3300*z**5 + 5950)/(z**5 - 1), x5**15*(3000*z**5 + 4500)/(z**5 - 1)]
>>> HP(x1**3 + x2**3 + x3**3).list_reduced([0, (x1+x2+1)**2])
(x1 + x2 + 1)**2
0
[Could not import friendly_traceback. You can install it with Tools => Manage packages]

Traceback (most recent call last):
  File "<pyshell>", line 1, in <module>
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 88, in list_reduced
    rs = self.reduced(outlst[deg - 1])
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 81, in reduced
    outlst[varnum] += gbred[0][num] * self.gbinjac[num][varnum]
IndexError: list index out of range
>>> %Run GetPFO.py
(x1 + x2 + 1)**2
0
[Could not import friendly_traceback. You can install it with Tools => Manage packages]

Traceback (most recent call last):
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 118, in <module>
    HP(x1**3 + x2**3 + x3**3).list_reduced([0, (x1+x2+1)**2])
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 88, in list_reduced
    rs = self.reduced(outlst[deg - 1])
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 81, in reduced
    outlst[varnum] += gbred[0][num] * self.gbinjac[num][varnum]
IndexError: list index out of range
>>> %Run GetPFO.py
(x1 + x2 + 1)**2
0 0
0 1
0 2
1 0
1 1
1 2
2 0
2 1
2 2
0
0 0
[Could not import friendly_traceback. You can install it with Tools => Manage packages]

Traceback (most recent call last):
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 119, in <module>
    HP(x1**3 + x2**3 + x3**3).list_reduced([0, (x1+x2+1)**2])
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 89, in list_reduced
    rs = self.reduced(outlst[deg - 1])
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 82, in reduced
    outlst[varnum] += gbred[0][num] * self.gbinjac[num][varnum]
IndexError: list index out of range
>>> %Run GetPFO.py
(x1 + x2 + 1)**2
0 0 3 3
0 1 3 3
0 2 3 3
1 0 3 3
1 1 3 3
1 2 3 3
2 0 3 3
2 1 3 3
2 2 3 3
0
0 0 0 3
[Could not import friendly_traceback. You can install it with Tools => Manage packages]

Traceback (most recent call last):
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 119, in <module>
    HP(x1**3 + x2**3 + x3**3).list_reduced([0, (x1+x2+1)**2])
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 89, in list_reduced
    rs = self.reduced(outlst[deg - 1])
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 82, in reduced
    outlst[varnum] += gbred[0][num] * self.gbinjac[num][varnum]
IndexError: list index out of range
>>> %Run GetPFO.py
(x1 + x2 + 1)**2
0 0 3 3
0 1 3 3
0 2 3 3
1 0 3 3
1 1 3 3
1 2 3 3
2 0 3 3
2 1 3 3
2 2 3 3
0
>>> %Run GetPFO.py
(x1 + x2 + 1)**2
0 0 3 3
0 1 3 3
0 2 3 3
1 0 3 3
1 1 3 3
1 2 3 3
2 0 3 3
2 1 3 3
2 2 3 3
0
[0, 2*x1*x2 + 2*x1 + 2*x2 + 1]
>>> HP(x1**3 + x2**3 + x3**3).reduced([0, (x1+x2+1)**2])
[0, (x1 + x2 + 1)**2]
[Could not import friendly_traceback. You can install it with Tools => Manage packages]

Traceback (most recent call last):
  File "C:\Users\chenyb\AppData\Local\Programs\Thonny\lib\site-packages\sympy\polys\polytools.py", line 6685, in reduced
    polys, opt = parallel_poly_from_expr([f] + list(G), *gens, **args)
  File "C:\Users\chenyb\AppData\Local\Programs\Thonny\lib\site-packages\sympy\polys\polytools.py", line 4309, in parallel_poly_from_expr
    return _parallel_poly_from_expr(exprs, opt)
  File "C:\Users\chenyb\AppData\Local\Programs\Thonny\lib\site-packages\sympy\polys\polytools.py", line 4355, in _parallel_poly_from_expr
    raise PolificationFailed(opt, origs, exprs, True)
sympy.polys.polyerrors.PolificationFailed: can't construct polynomials from [0, (x1 + x2 + 1)**2], -x1**2, -x2**2, -x3**2

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "<pyshell>", line 1, in <module>
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 77, in reduced
    gbred = sympy.reduced(inpoly, self.gb, self.varlist)
  File "C:\Users\chenyb\AppData\Local\Programs\Thonny\lib\site-packages\sympy\polys\polytools.py", line 6687, in reduced
    raise ComputationFailed('reduced', 0, exc)
sympy.polys.polyerrors.ComputationFailed: reduced() failed without generators
>>> HP(x1**3 + x2**3 + x3**3).reduced((x1+x2+1)**2)
(x1 + x2 + 1)**2
0 0 3 3
0 1 3 3
0 2 3 3
1 0 3 3
1 1 3 3
1 2 3 3
2 0 3 3
2 1 3 3
2 2 3 3
([1/3, 1/3, 0], 2*x1*x2 + 2*x1 + 2*x2 + 1)
>>> %Run GetPFO.py
(x1 + x2 + 1)**2
0
[0, 2*x1*x2 + 2*x1 + 2*x2 + 1]
>>> %Run GetPFO.py
(x1 + x2 + 1)**2
0
[0, x1**2 + 2*x1*x2 + 2*x1 + x2**2 + 2*x2 + 1]
>>> %Run GetPFO.py
(x1 + x2 + 1)**4
-1/2
[-1/2, 6*x1**2*x2**2 + 12*x1**2*x2 + 6*x1**2 + 12*x1*x2**2 + 12*x1*x2 + 4*x1 + 6*x2**2 + 4*x2 + 1]
>>> %Run GetPFO.py
[-1/2, 6*x1**2*x2**2 + 12*x1**2*x2 + 6*x1**2 + 12*x1*x2**2 + 12*x1*x2 + 4*x1 + 6*x2**2 + 4*x2 + 1]
>>> %Run GetPFO.py
[Could not import friendly_traceback. You can install it with Tools => Manage packages]

Traceback (most recent call last):
  File "E:\5d\PicardFuchs\PFTool\GetPFO.py", line 116, in <module>
    print(HP(x1**4 + x2**4 + x3**4).reduced(x1+x2+1)**4)
TypeError: unsupported operand type(s) for ** or pow(): 'tuple' and 'int'
>>> %Run GetPFO.py
([x1/4 + x2 + 1, x1 + x2/4 + 1, 0], 6*x1**2*x2**2 + 12*x1**2*x2 + 6*x1**2 + 12*x1*x2**2 + 12*x1*x2 + 4*x1 + 6*x2**2 + 4*x2 + 1)
[-1/2, 6*x1**2*x2**2 + 12*x1**2*x2 + 6*x1**2 + 12*x1*x2**2 + 12*x1*x2 + 4*x1 + 6*x2**2 + 4*x2 + 1]
>>> %Run GetPFO.py
([x1/4 + x2 + 1, x1 + x2/4 + 1, 0], 6*x1**2*x2**2 + 12*x1**2*x2 + 6*x1**2 + 12*x1*x2**2 + 12*x1*x2 + 4*x1 + 6*x2**2 + 4*x2 + 1)
[0, -1/4, 6*x1**2*x2**2 + 12*x1**2*x2 + 6*x1**2 + 12*x1*x2**2 + 12*x1*x2 + 4*x1 + 6*x2**2 + 4*x2 + 1]
>>> %Run GetPFO.py
([x1/4 + x2 + 1, x1 + x2/4 + 1, 0], 6*x1**2*x2**2 + 12*x1**2*x2 + 6*x1**2 + 12*x1*x2**2 + 12*x1*x2 + 4*x1 + 6*x2**2 + 4*x2 + 1)
[0, 0, -1/6, 6*x1**2*x2**2 + 12*x1**2*x2 + 6*x1**2 + 12*x1*x2**2 + 12*x1*x2 + 4*x1 + 6*x2**2 + 4*x2 + 1]
>>> %Run GetPFO.py
[z*(2*z - 1)/(4*(z**2 - z + 1)), x3**3*z**2*(z - 1)/(2*(z**2 - z + 1))]
[z*(z**3 - 2*z**2 + 8*z - 1)/(4*(z**4 - 2*z**3 + 3*z**2 - 2*z + 1)), x3**3*z**2*(3*z**3 - 5*z**2 + 9*z - 4)/(2*(z**4 - 2*z**3 + 3*z**2 - 2*z + 1))]
>>> l.gb
[-x3**4, -x1*x2**2 - x3**3*(-z**4 + 2*z**3 - z**2)/(2*z**2 - 2*z + 2), -x2**3, -x1**2 - x2**2*(-z - 1)/(z**2 - z + 1) + x3**2*z**2/(z**2 - z + 1), -x1*x3 + 3*x2**2/(2*z**2 - 2*z + 2) - x3**2*(-z**2 - z)/(2*z**2 - 2*z + 2), -x2*x3]
>>> l.gbinjac
[[(6*x1**2*z + 3*x1**2 - 10*x1*x3*z + 2*x1*x3 + 3*x2**2*z - 3*x2**2 - 2*x3**2*z**3 + 8*x3**2*z**2 - 3*x3**2*z - z**2*(3*x1**2 - 2*x1*x3*z - 2*x1*x3 + x3**2*z) - 2*z*(3*x1**2 - 2*x1*x3*z - 2*x1*x3 + x3**2*z) - 6*z*(-x1**2*z - x1**2 + 2*x1*x3*z + x2**2))/(3*z**4 - 6*z**3 + 3*z**2), -(12*x1*x2*z**2 - 12*x1*x2*z + 12*x1*x2 - 8*x2*x3*z**3 + 6*x2*x3*z**2 + 6*x2*x3*z - 8*x2*x3)/(12*z**4 - 24*z**3 + 12*z**2), (9*x1**2*z + 9*x1**2 - 18*x1*x3*z - 4*x3**2*z**3 + 6*x3**2*z**2 + 6*x3**2*z - 4*x3**2)/(3*z**4 - 6*z**3 + 3*z**2)], [-(2*x1*z**3 + 2*x1 - 3*x3*z**3 + 6*x3*z**2 - 3*x3*z)/(6*z**2 - 6*z + 6), -(4*x2*z**3 - 3*x2*z**2 - 3*x2*z + 4*x2)/(12*z**2 - 12*z + 12), -(6*x1*z**2 - 6*x1*z + 6*x1 - 4*x3*z**3 + 3*x3*z**2 + 3*x3*z - 4*x3)/(6*z**2 - 6*z + 6)], [-x2*z/3 - x2/3, -x1*z**2/3 + x1*z/3 - x1/3 + x3*z**2/6 + x3*z/6, -x2], [z/(z**2 - z + 1), 0, (z + 1)/(z**2 - z + 1)], [(z + 1)/(2*z**2 - 2*z + 2), 0, 3/(2*z**2 - 2*z + 2)], [0, -1/2, 0]]
>>> %Run GetPFO.py
[z*(2*z - 1)/(4*(z**2 - z + 1)), x3**3*z**2*(z - 1)/(2*(z**2 - z + 1))]
[z*(z**3 - 2*z**2 + 8*z - 1)/(4*(z**4 - 2*z**3 + 3*z**2 - 2*z + 1)), x3**3*z**2*(3*z**3 - 5*z**2 + 9*z - 4)/(2*(z**4 - 2*z**3 + 3*z**2 - 2*z + 1))]
0
0
0
0
0
0
>>> %Run GetPFO.py
[z*(2*z - 1)/(4*(z**2 - z + 1)), x3**3*z**2*(z - 1)/(2*(z**2 - z + 1))]
[z*(z**3 - 2*z**2 + 8*z - 1)/(4*(z**4 - 2*z**3 + 3*z**2 - 2*z + 1)), x3**3*z**2*(3*z**3 - 5*z**2 + 9*z - 4)/(2*(z**4 - 2*z**3 + 3*z**2 - 2*z + 1))]
>>> %Run GetPFO.py
[z*(1 - 2*z)/(4*(z**2 - z + 1)), x3**3*z**2*(z - 1)/(2*(z**2 - z + 1))]
[z*(z + 1)/(4*(z**2 - z + 1)), -x3**3*z**3/(2*z**2 - 2*z + 2)]
>>> %Run GetPFO.py
[z*(1 - 2*z)/(4*(z**2 - z + 1)), x3**3*z**2*(z - 1)/(2*(z**2 - z + 1))]
[z*(z + 1)/(4*(z**2 - z + 1)), -x3**3*z**3/(2*z**2 - 2*z + 2)]
>>> %Run GetPFO.py
[z*(2*z - 1)/(4*(z**2 - z + 1)), x3**3*z**2*(z - 1)/(2*(z**2 - z + 1))]
[z*(z**3 - 2*z**2 + 8*z - 1)/(4*(z**4 - 2*z**3 + 3*z**2 - 2*z + 1)), x3**3*z**2*(3*z**3 - 5*z**2 + 9*z - 4)/(2*(z**4 - 2*z**3 + 3*z**2 - 2*z + 1))]
>>> %Run GetPFO.py
[z*(1 - 2*z)/(4*(z**2 - z + 1)), x3**3*z**2*(z - 1)/(2*(z**2 - z + 1))]
[z*(z + 1)/(4*(z**2 - z + 1)), -x3**3*z**3/(2*z**2 - 2*z + 2)]
>>> %Run GetPFO.py
[z*(1 - 2*z)/(4*(z**2 - z + 1)), x3**3*z**2*(z - 1)/(2*(z**2 - z + 1))]
[z*(z + 1)/(4*(z**2 - z + 1)), -x3**3*z**3/(2*z**2 - 2*z + 2)]
>>> %Run GetPFO.py
[z*(2*z - 1)/(4*(z**2 - z + 1)), x3**3*z**2*(z - 1)/(2*(z**2 - z + 1))]
[z*(z**3 - 2*z**2 + 8*z - 1)/(4*(z**4 - 2*z**3 + 3*z**2 - 2*z + 1)), x3**3*z**2*(3*z**3 - 5*z**2 + 9*z - 4)/(2*(z**4 - 2*z**3 + 3*z**2 - 2*z + 1))]
>>> %Run GetPFO.py
[z*(1 - 2*z)/(4*(z**2 - z + 1)), x3**3*z**2*(z - 1)/(2*(z**2 - z + 1))]
[z*(z + 1)/(4*(z**2 - z + 1)), -x3**3*z**3/(2*z**2 - 2*z + 2)]
>>> %Run GetPFO.py
[z*(1 - 2*z)/(4*(z**2 - z + 1)), x3**3*z**2*(z - 1)/(2*(z**2 - z + 1))]
[z*(z + 1)/(4*(z**2 - z + 1)), -x3**3*z**3/(2*z**2 - 2*z + 2)]
[(1/4 - z/2)/(z**2 - z + 1), x3**3*z*(z - 1)/(2*(z**2 - z + 1))]
[3/(4*(z**2 - z + 1)), x3**3*(1/2 - z)/(z**2 - z + 1)]
>>> l.gbinjac
[[(6*x1**2*z + 3*x1**2 - 10*x1*x3*z + 2*x1*x3 + 3*x2**2*z - 3*x2**2 - 2*x3**2*z**3 + 8*x3**2*z**2 - 3*x3**2*z - z**2*(3*x1**2 - 2*x1*x3*z - 2*x1*x3 + x3**2*z) - 2*z*(3*x1**2 - 2*x1*x3*z - 2*x1*x3 + x3**2*z) - 6*z*(-x1**2*z - x1**2 + 2*x1*x3*z + x2**2))/(3*z**4 - 6*z**3 + 3*z**2), -(12*x1*x2*z**2 - 12*x1*x2*z + 12*x1*x2 - 8*x2*x3*z**3 + 6*x2*x3*z**2 + 6*x2*x3*z - 8*x2*x3)/(12*z**4 - 24*z**3 + 12*z**2), (9*x1**2*z + 9*x1**2 - 18*x1*x3*z - 4*x3**2*z**3 + 6*x3**2*z**2 + 6*x3**2*z - 4*x3**2)/(3*z**4 - 6*z**3 + 3*z**2)], [-(2*x1*z**3 + 2*x1 - 3*x3*z**3 + 6*x3*z**2 - 3*x3*z)/(6*z**2 - 6*z + 6), -(4*x2*z**3 - 3*x2*z**2 - 3*x2*z + 4*x2)/(12*z**2 - 12*z + 12), -(6*x1*z**2 - 6*x1*z + 6*x1 - 4*x3*z**3 + 3*x3*z**2 + 3*x3*z - 4*x3)/(6*z**2 - 6*z + 6)], [-x2*z/3 - x2/3, -x1*z**2/3 + x1*z/3 - x1/3 + x3*z**2/6 + x3*z/6, -x2], [z/(z**2 - z + 1), 0, (z + 1)/(z**2 - z + 1)], [(z + 1)/(2*z**2 - 2*z + 2), 0, 3/(2*z**2 - 2*z + 2)], [0, -1/2, 0]]
>>> gb
[Could not import friendly_traceback. You can install it with Tools => Manage packages]

Traceback (most recent call last):
  File "<pyshell>", line 1, in <module>
NameError: name 'gb' is not defined
>>> l.gb
[-x3**4, -x1*x2**2 - x3**3*(-z**4 + 2*z**3 - z**2)/(2*z**2 - 2*z + 2), -x2**3, -x1**2 - x2**2*(-z - 1)/(z**2 - z + 1) + x3**2*z**2/(z**2 - z + 1), -x1*x3 + 3*x2**2/(2*z**2 - 2*z + 2) - x3**2*(-z**2 - z)/(2*z**2 - 2*z + 2), -x2*x3]
>>> sympy.reduced(x2**3, l.gb, [x1, x2, x3])
([0, 0, -1, 0, 0, 0], 0)
>>> sympy.reduced(x1**3, l.gb, [x1, x2, x3])
([0, (-z - 1)/(z**2 - z + 1), 0, -x1, -x3*z**2/(z**2 - z + 1), -3*x2*z**2/(2*z**4 - 4*z**3 + 6*z**2 - 4*z + 2)], x3**3*(z**3 + z**2)/(2*z**2 - 2*z + 2))
>>> sympy.reduced(x1**4, l.gb, [x1, x2, x3])
([(-z**7 - 4*z**6 + 6*z**5 - 4*z**4 - z**3)/(4*z**6 - 12*z**5 + 24*z**4 - 28*z**3 + 24*z**2 - 12*z + 4), x1*(-z - 1)/(z**2 - z + 1), 0, -x1**2 - x3**2*z**2/(z**2 - z + 1), x3**2*(-z**5 + z**4 + z**3 - z**2)/(2*z**4 - 4*z**3 + 6*z**2 - 4*z + 2), x2*x3*(-7*z**5 + 3*z**4 + 3*z**3 - 7*z**2)/(4*z**6 - 12*z**5 + 24*z**4 - 28*z**3 + 24*z**2 - 12*z + 4)], 0)
>>> sympy.reduced(x1**4 * x2, l.gb, [x1, x2, x3])
([x2*(-z**7 - 4*z**6 + 6*z**5 - 4*z**4 - z**3)/(4*z**6 - 12*z**5 + 24*z**4 - 28*z**3 + 24*z**2 - 12*z + 4), x1*x2*(-z - 1)/(z**2 - z + 1), x3**2*(-7*z**5 + 3*z**4 + 3*z**3 - 7*z**2)/(4*z**6 - 12*z**5 + 24*z**4 - 28*z**3 + 24*z**2 - 12*z + 4), -x1**2*x2 - x2*x3**2*z**2/(z**2 - z + 1), x2*x3**2*(-z**5 + z**4 + z**3 - z**2)/(2*z**4 - 4*z**3 + 6*z**2 - 4*z + 2), 0], 0)
>>> l
<__main__.HP object at 0x050FCD30>
>>> 
